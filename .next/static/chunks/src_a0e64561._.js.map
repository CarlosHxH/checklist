{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/carlos.dias/Documents/Apps/mui_CHECKLIST/src/lib/ultils.ts"],"sourcesContent":["export const fakeArray = (value: number) =>\r\n  Array.from({ length: value }, (_, i) => i + 1);\r\n\r\nexport const fetcher = (url: string) => fetch(url).then((r) => r.json());\r\n\r\nexport const hoje = (() => new Date().toLocaleString(\"pt-BR\"))();\r\n/*\r\nexport const formatDate = (dateString: string | Date) => {\r\n  return new Date(dateString).toLocaleDateString(\"pt-BR\");\r\n};*/\r\n\r\n// Formatar a data para exibição\r\nexport const formatDate = (dateString: string) => {\r\n  const date = new Date(dateString);\r\n  return new Intl.DateTimeFormat(\"pt-BR\", {\r\n    day: \"2-digit\",\r\n    month: \"2-digit\",\r\n    year: \"numeric\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  }).format(date);\r\n};\r\n\r\nexport const stringToDate = (isoString: string) => {\r\n  return isoString.slice(0, 16);\r\n};\r\n\r\nexport const today = () => new Date().toISOString().split(\"T\")[0];\r\nexport type AnyObject = { [key: string]: any };\r\n\r\n/**\r\n * Function to find a string in an object's properties.\r\n * @param obj - The object to search through.\r\n * @param searchString - The string to search for.\r\n * @returns An array of keys where the search string is found.\r\n */\r\nexport function findObject(obj: AnyObject, searchString: string): string[] {\r\n  const foundKeys: string[] = [];\r\n\r\n  // Helper function to recursively search through the object\r\n  function search(obj: AnyObject) {\r\n    for (const key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        const value = obj[key];\r\n\r\n        // Check if the value is a string and contains the search string\r\n        if (typeof value === \"string\" && value.includes(searchString)) {\r\n          foundKeys.push(key);\r\n        }\r\n\r\n        // If the value is an object, search recursively\r\n        if (typeof value === \"object\" && value !== null) {\r\n          search(value);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  search(obj);\r\n  return foundKeys;\r\n}\r\n\r\n/**\r\n * Filtra um array de itens com base em múltiplos critérios de filtro\r\n * @param array O array a ser filtrado\r\n * @param filters Um objeto com chaves representando propriedades e valores representando critérios de filtro\r\n * @returns Um novo array contendo apenas os itens que correspondem a todos os filtros\r\n */\r\nexport function multiFilter<T extends Record<string, any>>(\r\n  array: T[],\r\n  filters: Record<string, string | null | undefined>\r\n): T[] {\r\n  return array.filter((item) => {\r\n    return Object.entries(filters).every(([key, value]) => {\r\n      // Se o valor do filtro for nulo ou indefinido, não aplica o filtro\r\n      if (!value) return true;\r\n\r\n      const filterValues = value.split(\",\").map((v) => v.trim().toLowerCase());\r\n      const itemValue = String(item[key]).toLowerCase();\r\n\r\n      // Verifica se algum dos valores do filtro corresponde ao valor do item\r\n      return filterValues.some((filterValue) => {\r\n        // Lida com comparações numéricas\r\n        if (!isNaN(Number(itemValue)) && !isNaN(Number(filterValue))) {\r\n          return Number(itemValue) === Number(filterValue);\r\n        }\r\n        // Lida com inclusões de string\r\n        return itemValue.includes(filterValue);\r\n      });\r\n    });\r\n  });\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAAO,MAAM,YAAY,CAAC,QACxB,MAAM,IAAI,CAAC;QAAE,QAAQ;IAAM,GAAG,CAAC,GAAG,IAAM,IAAI;AAEvC,MAAM,UAAU,CAAC,MAAgB,MAAM,KAAK,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI;AAE9D,MAAM,OAAO,CAAC,IAAM,IAAI,OAAO,cAAc,CAAC,QAAQ;AAOtD,MAAM,aAAa,CAAC;IACzB,MAAM,OAAO,IAAI,KAAK;IACtB,OAAO,IAAI,KAAK,cAAc,CAAC,SAAS;QACtC,KAAK;QACL,OAAO;QACP,MAAM;QACN,MAAM;QACN,QAAQ;IACV,GAAG,MAAM,CAAC;AACZ;AAEO,MAAM,eAAe,CAAC;IAC3B,OAAO,UAAU,KAAK,CAAC,GAAG;AAC5B;AAEO,MAAM,QAAQ,IAAM,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;AAS1D,SAAS,WAAW,GAAc,EAAE,YAAoB;IAC7D,MAAM,YAAsB,EAAE;IAE9B,2DAA2D;IAC3D,SAAS,OAAO,GAAc;QAC5B,IAAK,MAAM,OAAO,IAAK;YACrB,IAAI,IAAI,cAAc,CAAC,MAAM;gBAC3B,MAAM,QAAQ,GAAG,CAAC,IAAI;gBAEtB,gEAAgE;gBAChE,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,CAAC,eAAe;oBAC7D,UAAU,IAAI,CAAC;gBACjB;gBAEA,gDAAgD;gBAChD,IAAI,OAAO,UAAU,YAAY,UAAU,MAAM;oBAC/C,OAAO;gBACT;YACF;QACF;IACF;IAEA,OAAO;IACP,OAAO;AACT;AAQO,SAAS,YACd,KAAU,EACV,OAAkD;IAElD,OAAO,MAAM,MAAM,CAAC,CAAC;QACnB,OAAO,OAAO,OAAO,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,KAAK,MAAM;YAChD,mEAAmE;YACnE,IAAI,CAAC,OAAO,OAAO;YAEnB,MAAM,eAAe,MAAM,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI,GAAG,WAAW;YACrE,MAAM,YAAY,OAAO,IAAI,CAAC,IAAI,EAAE,WAAW;YAE/C,uEAAuE;YACvE,OAAO,aAAa,IAAI,CAAC,CAAC;gBACxB,iCAAiC;gBACjC,IAAI,CAAC,MAAM,OAAO,eAAe,CAAC,MAAM,OAAO,eAAe;oBAC5D,OAAO,OAAO,eAAe,OAAO;gBACtC;gBACA,+BAA+B;gBAC/B,OAAO,UAAU,QAAQ,CAAC;YAC5B;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/carlos.dias/Documents/Apps/mui_CHECKLIST/src/components/Loading.tsx"],"sourcesContent":["import { Box, CircularProgress } from \"@mui/material\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n        zIndex: 9999,\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n      }}\r\n    >\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Loading;"],"names":[],"mappings":";;;;AAAA;AAAA;;;AAEA,MAAM,UAAU;IACd,qBACE,6LAAC,oLAAA,CAAA,MAAG;QACF,IAAI;YACF,SAAS;YACT,iBAAiB;YACjB,gBAAgB;YAChB,YAAY;YACZ,QAAQ;YACR,OAAO;YACP,QAAQ;YACR,UAAU;YACV,KAAK;YACL,MAAM;QACR;kBAEA,cAAA,6LAAC,2NAAA,CAAA,mBAAgB;;;;;;;;;;AAGvB;KAnBM;uCAqBS","debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/carlos.dias/Documents/Apps/mui_CHECKLIST/src/app/dashboard/inspecao/page.tsx"],"sourcesContent":["\"use client\";\r\nimport React from 'react';\r\nimport useSWR from 'swr';\r\nimport { fetcher } from '@/lib/ultils';\r\nimport Loading from '@/components/Loading';\r\nimport { Box, Chip, IconButton, Paper, Tooltip, Typography } from '@mui/material';\r\nimport { DataGrid, GridColDef, GridRenderCellParams, GridToolbar } from '@mui/x-data-grid';\r\nimport { useRouter } from 'next/navigation';\r\nimport { Visibility } from '@mui/icons-material';\r\nimport { PageContainer } from '@toolpad/core/PageContainer';\r\n\r\ninterface Vehicle {\r\n  plate: string;\r\n  model: string;\r\n}\r\n\r\ninterface Inspection {\r\n  id: string;\r\n  createdAt: string;\r\n  status: string;\r\n  kilometer: string;\r\n  crlvEmDia: string;\r\n  certificadoTacografoEmDia: string;\r\n  nivelAgua: string;\r\n  nivelOleo: string;\r\n  avariasCabine: string;\r\n  bauPossuiAvarias: string;\r\n  funcionamentoParteEletrica: string;\r\n  extintor: string;\r\n  isFinished: boolean;\r\n  vehicle: Vehicle;\r\n}\r\n\r\nconst InspectionDashboard: React.FC = () => {\r\n  const router = useRouter();\r\n  const { data: inspections, error } = useSWR<Inspection[]>('/api/v2/dashboard/inspecao', fetcher);\r\n\r\n  const StatusChip: React.FC<{ value: string }> = ({ value }) => {\r\n    const getChipProps = () => {\r\n      switch (value) {\r\n        case 'BOM':\r\n        case 'NORMAL':\r\n        case 'SIM': return { color: 'success' as const, label: value };\r\n        case 'RUIM':\r\n        case 'BAIXO':\r\n        case 'NÃO': return { color: 'error' as const, label: value };\r\n        case 'CRITICO': return { color: 'error' as const, label: value, variant: 'outlined' as const };\r\n        default: return { color: 'default' as const, label: value };\r\n      }\r\n    };\r\n    return <Chip size=\"small\" {...getChipProps()} />;\r\n  };\r\n\r\n  const columns: GridColDef[] = [\r\n    {\r\n      field: 'createdAt',\r\n      headerName: 'Data',\r\n      width: 100,\r\n      valueFormatter: (value) => new Date(value).toLocaleDateString(),\r\n    },\r\n    {\r\n      field: 'vehicle',\r\n      headerName: 'Veículo',\r\n      minWidth: 100,\r\n      flex: 1,\r\n      renderCell: (params: GridRenderCellParams) => (<Box>\r\n        <Typography variant='subtitle2'>{params.formattedValue.plate}</Typography>\r\n        <Typography variant='caption'>{params.formattedValue.model}</Typography>\r\n      </Box>\r\n      ),\r\n    },\r\n    {\r\n      field: 'kilometer',\r\n      headerName: 'KM',\r\n      width: 80,\r\n    },\r\n    {\r\n      field: 'crlvEmDia',\r\n      headerName: 'CRLV',\r\n      width: 100,\r\n      renderCell: (params: GridRenderCellParams) => <StatusChip value={params.value} />,\r\n    },\r\n    {\r\n      field: 'certificadoTacografoEmDia',\r\n      headerName: 'Tacógrafo',\r\n      width: 100,\r\n      renderCell: (params: GridRenderCellParams) => <StatusChip value={params.value} />,\r\n    },\r\n    {\r\n      field: 'nivelAgua',\r\n      headerName: 'Agua',\r\n      width: 100,\r\n      renderCell: (params: GridRenderCellParams) => <StatusChip value={params.value} />,\r\n    },\r\n    {\r\n      field: 'nivelOleo',\r\n      headerName: 'Oleo',\r\n      width: 100,\r\n      renderCell: (params: GridRenderCellParams) => <StatusChip value={params.value} />,\r\n    },\r\n    {\r\n      field: 'extintor',\r\n      headerName: 'Extintor',\r\n      width: 80,\r\n      renderCell: (params: GridRenderCellParams) => <StatusChip value={params.value} />,\r\n    },\r\n    {\r\n      field: 'user',\r\n      headerName: 'Usuario',\r\n      width: 110,\r\n      valueGetter: (value, row) => `${row.user.name}`\r\n    },\r\n    {\r\n      field: 'actions',\r\n      headerName: 'Ações',\r\n      width: 55,\r\n      sortable: false,\r\n      renderCell: (params: GridRenderCellParams) => (\r\n        <Box>\r\n          <Tooltip title=\"Visualizar\">\r\n            <IconButton size=\"small\" onClick={() => router.push(`/dashboard/inspecao/${params.row.id}`)}>\r\n              <Visibility />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  if (error) return <div>Erro ao carregar as inspeções</div>;\r\n  if (!inspections) return <Loading />;\r\n\r\n  return (\r\n      <PageContainer >\r\n        <DataGrid\r\n          rows={inspections}\r\n          columns={columns}\r\n          initialState={{\r\n            pagination: {\r\n              paginationModel: { page: 0, pageSize: 15 }\r\n            }\r\n          }}\r\n          slots={{ toolbar: GridToolbar }}\r\n          localeText={{\r\n            toolbarColumns: \"\",\r\n            toolbarFilters: \"\",\r\n            toolbarExport: \"\",\r\n            toolbarDensity: \"\"\r\n          }}\r\n          pageSizeOptions={[5, 10, 15, 25, 50, 75, 100]}\r\n          rowSelection={false}\r\n          getRowHeight={() => 'auto'}\r\n          rowHeight={48}\r\n        />\r\n      </PageContainer >\r\n  );\r\n};\r\n\r\nexport default InspectionDashboard;"],"names":[],"mappings":"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","debugId":null}}]
}