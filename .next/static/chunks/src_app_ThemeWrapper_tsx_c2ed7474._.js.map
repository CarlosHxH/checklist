{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/carlos.dias/Documents/Apps/mui_CHECKLIST/src/app/ThemeWrapper.tsx"],"sourcesContent":["'use client';\r\nimport React from \"react\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material\";\r\nimport { theme } from \"./theme\";\r\n\r\n// Create a client component wrapper to handle the theme\r\nconst lightTheme = createTheme({\r\n  components: {\r\n    MuiAppBar: {\r\n      styleOverrides: {\r\n        root: {\r\n          backgroundColor: '#ffffff',\r\n          color: '#1976d2',\r\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    mode: 'dark',\r\n  },\r\n  components: {\r\n    MuiAppBar: {\r\n      styleOverrides: {\r\n        root: {\r\n          backgroundColor: '#0a1929',\r\n          boxShadow: 'none',\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst ThemeWrapper = ({ children }:{ children: React.ReactNode }) => {\r\n    const [darkMode, setDarkMode] = React.useState(true);\r\n    return (\r\n      <ThemeProvider theme={darkMode ? darkTheme : lightTheme}>\r\n        {children}\r\n      </ThemeProvider>\r\n    );\r\n  };\r\nexport default ThemeWrapper;"],"names":[],"mappings":";;;;AACA;AACA;AAAA;;;AAFA;;;AAKA,wDAAwD;AACxD,MAAM,aAAa,CAAA,GAAA,uNAAA,CAAA,cAAW,AAAD,EAAE;IAC7B,YAAY;QACV,WAAW;YACT,gBAAgB;gBACd,MAAM;oBACJ,iBAAiB;oBACjB,OAAO;oBACP,WAAW;gBACb;YACF;QACF;IACF;AACF;AAEA,MAAM,YAAY,CAAA,GAAA,uNAAA,CAAA,cAAW,AAAD,EAAE;IAC5B,SAAS;QACP,MAAM;IACR;IACA,YAAY;QACV,WAAW;YACT,gBAAgB;gBACd,MAAM;oBACJ,iBAAiB;oBACjB,WAAW;gBACb;YACF;QACF;IACF;AACF;AAEA,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAgC;;IAC5D,MAAM,CAAC,UAAU,YAAY,GAAG,6JAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;IAC/C,qBACE,6LAAC,2MAAA,CAAA,gBAAa;QAAC,OAAO,WAAW,YAAY;kBAC1C;;;;;;AAGP;GAPI;KAAA;uCAQS","debugId":null}}]
}