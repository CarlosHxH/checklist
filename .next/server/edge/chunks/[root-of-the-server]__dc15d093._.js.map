{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["// middleware.ts\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { auth } from \"@/auth\";\n\n// Using Next-Auth v5's middleware pattern\nexport default auth(async (req) => {\n  // The auth function adds the auth object to the request\n  const { auth: session } = req;\n  const { nextUrl } = req;\n  \n  // Redirect non-admin users away from dashboard\n  if (session?.user?.role !== \"ADMIN\" && nextUrl.pathname.startsWith(\"/dashboard\")) {\n    return NextResponse.redirect(new URL(\"/\", nextUrl.origin));\n  }\n\n  // Handle API route permissions\n  if (nextUrl.pathname.startsWith(\"/api/v1/\")) {\n    // Check if user has required role for dashboard API\n    if (!session?.user || ![\"ADMIN\", \"USER\",\"DRIVER\"].includes(session?.user?.role||\"DRIVER\")) {\n      return NextResponse.json(\n        { message: \"Unauthorized access\" },\n        { status: 403 }\n      );\n    }\n  }\n\n    // Handle API route permissions\n    if (nextUrl.pathname.startsWith(\"/api/v2/\")) {\n      // Check if user has required role for dashboard API\n      if (!session?.user || ![\"ADMIN\", \"USER\"].includes(session?.user?.role||\"DRIVER\")) {\n        return NextResponse.json(\n          { message: \"Unauthorized access\" },\n          { status: 403 }\n        );\n      }\n    }\n\n  // Let auth API routes pass through\n  if (nextUrl.pathname.startsWith(\"/api/auth\")) {\n    return NextResponse.next();\n  }\n\n  // If user is NOT logged in and tries to access protected routes\n  if (!session?.user && !nextUrl.pathname.startsWith(\"/auth/\")) {\n    // Store the original URL they were trying to visit\n    const redirectUrl = new URL(\"/auth/signin\", nextUrl.origin);\n    redirectUrl.searchParams.set(\"callbackUrl\", nextUrl.pathname);\n    return NextResponse.redirect(redirectUrl);\n  }\n  \n  // Permit all other scenarios\n  return NextResponse.next();\n}) as unknown as (request: NextRequest) => Promise<NextResponse>;\n\n// Configure which routes the middleware applies to\nexport const config = {\n  // Add all routes that should be protected or have redirect logic\n  matcher: [\n    // Auth routes\n    \"/auth/:path*\",\n    // Protected routes\n    \"/\",\n    \"/dashboard/:path*\",\n    \"/inspection/:path*\",\n    \"/viagem/:path*\",\n    \"/api/v1/:path*\",\n    \"/api/v2/:path*\",\n    // Add other routes as needed\n  ],\n};\n\n\n\n/*\n  // If user IS logged in and tries to access auth pages (prevent logged-in users from seeing login page)\n  if (session?.user && nextUrl.pathname.startsWith(\"/auth/\")) {\n    return NextResponse.redirect(new URL(\"/\", nextUrl.origin));\n  }\n*/\n/*\n  // Verificar se a rota começa com /api/v1\n  const authHeader = req.headers.get(\"authorization\");\n  if (authHeader && req.nextUrl.pathname.startsWith(\"/api/v1\")) {\n    try {\n      // Obter o token do header de autorização\n      if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n        return new NextResponse(\n          JSON.stringify({ error: \"Token não fornecido\" }),\n          { status: 401, headers: { \"Content-Type\": \"application/json\" } }\n        );\n      }\n      const token = authHeader.split(' ')[1];\n\n      \n      if (!account) {\n        return new NextResponse(\n          JSON.stringify({ error: \"Conta não encontrada\" }),\n          { status: 404, headers: { \"Content-Type\": \"application/json\" } }\n        );\n      }\n      return NextResponse.next();\n    } catch (error) {\n      // Token inválido ou expirado\n      return new NextResponse(\n        JSON.stringify({ error: \"Token inválido ou expirado\" }),\n        { status: 401, headers: { \"Content-Type\": \"application/json\" } }\n      );\n    }\n  }\n*/"],"names":[],"mappings":"AAAA,gBAAgB;;;;;AAChB;AAAA;;;;;;;;uCAIe,KAAK,OAAO;IACzB,wDAAwD;IACxD,MAAM,EAAE,MAAM,OAAO,EAAE,GAAG;IAC1B,MAAM,EAAE,OAAO,EAAE,GAAG;IAEpB,+CAA+C;IAC/C,IAAI,SAAS,MAAM,SAAS,WAAW,QAAQ,QAAQ,CAAC,UAAU,CAAC,eAAe;QAChF,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,MAAM;IAC1D;IAEA,+BAA+B;IAC/B,IAAI,QAAQ,QAAQ,CAAC,UAAU,CAAC,aAAa;QAC3C,oDAAoD;QACpD,IAAI,CAAC,SAAS,QAAQ,CAAC;YAAC;YAAS;YAAO;SAAS,CAAC,QAAQ,CAAC,SAAS,MAAM,QAAM,WAAW;YACzF,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAAsB,GACjC;gBAAE,QAAQ;YAAI;QAElB;IACF;IAEE,+BAA+B;IAC/B,IAAI,QAAQ,QAAQ,CAAC,UAAU,CAAC,aAAa;QAC3C,oDAAoD;QACpD,IAAI,CAAC,SAAS,QAAQ,CAAC;YAAC;YAAS;SAAO,CAAC,QAAQ,CAAC,SAAS,MAAM,QAAM,WAAW;YAChF,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAAsB,GACjC;gBAAE,QAAQ;YAAI;QAElB;IACF;IAEF,mCAAmC;IACnC,IAAI,QAAQ,QAAQ,CAAC,UAAU,CAAC,cAAc;QAC5C,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,gEAAgE;IAChE,IAAI,CAAC,SAAS,QAAQ,CAAC,QAAQ,QAAQ,CAAC,UAAU,CAAC,WAAW;QAC5D,mDAAmD;QACnD,MAAM,cAAc,IAAI,IAAI,gBAAgB,QAAQ,MAAM;QAC1D,YAAY,YAAY,CAAC,GAAG,CAAC,eAAe,QAAQ,QAAQ;QAC5D,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,6BAA6B;IAC7B,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,iEAAiE;IACjE,SAAS;QACP,cAAc;QACd;QACA,mBAAmB;QACnB;QACA;QACA;QACA;QACA;QACA;KAED;AACH,GAIA;;;;;AAKA,IACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA"}}]
}