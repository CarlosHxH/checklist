{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/carlos.dias/Documents/Apps/mui_CHECKLIST/src/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\r\n\r\nconst globalForPrisma = global as unknown as { prisma: PrismaClient };\r\n\r\nexport const prisma = globalForPrisma.prisma || new PrismaClient();\r\nexport default prisma;\r\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma;\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,kBAAkB;AAEjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;uCACjD;AACf,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/carlos.dias/Documents/Apps/mui_CHECKLIST/src/app/api/v2/dashboard/inspecao/%5Bid%5D/route.ts"],"sourcesContent":["import { prisma } from \"@/prisma\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\n\r\nexport async function GET(request: NextRequest, { params }: { params: Promise<{ id: string }> }) {\r\n  try {\r\n    const { id } = await params;\r\n    const inspection = await prisma.inspection.findUnique({\r\n      where: { id },\r\n      include: {\r\n        vehicle: {\r\n          select: {\r\n            plate: true,\r\n            model: true,\r\n          },\r\n        },\r\n        photos: {\r\n          select: {\r\n            id: true,\r\n            type: true,\r\n            photo: true,\r\n            description: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    if (!inspection) {\r\n      return NextResponse.json(\r\n        { error: \"Inspeção não encontrada\" },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json(inspection);\r\n  } catch (error) {\r\n    return NextResponse.json({ error: \"Erro interno do servidor\" },{ status: 500 });\r\n  }\r\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,IAAI,OAAoB,EAAE,EAAE,MAAM,EAAuC;IAC7F,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;QACrB,MAAM,aAAa,MAAM,+GAAA,CAAA,SAAM,CAAC,UAAU,CAAC,UAAU,CAAC;YACpD,OAAO;gBAAE;YAAG;YACZ,SAAS;gBACP,SAAS;oBACP,QAAQ;wBACN,OAAO;wBACP,OAAO;oBACT;gBACF;gBACA,QAAQ;oBACN,QAAQ;wBACN,IAAI;wBACJ,MAAM;wBACN,OAAO;wBACP,aAAa;oBACf;gBACF;YACF;QACF;QAEA,IAAI,CAAC,YAAY;YACf,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA0B,GACnC;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA2B,GAAE;YAAE,QAAQ;QAAI;IAC/E;AACF","debugId":null}}]
}