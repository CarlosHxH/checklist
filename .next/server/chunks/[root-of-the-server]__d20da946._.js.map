{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/carlos.dias/Documents/Apps/mui_CHECKLIST/src/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\r\n\r\nconst globalForPrisma = global as unknown as { prisma: PrismaClient };\r\n\r\nexport const prisma = globalForPrisma.prisma || new PrismaClient();\r\nexport default prisma;\r\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma;\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,kBAAkB;AAEjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;uCACjD;AACf,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/carlos.dias/Documents/Apps/mui_CHECKLIST/src/app/api/v2/dashboard/inspecao/route.tsx"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\nimport { prisma } from \"@/prisma\";\r\nimport { z } from \"zod\";\r\nimport { InspectionFormData } from \"@/types/InspectionSchema\";\r\n\r\nasync function transaction(validatedData: InspectionFormData) {\r\n  const { photos, ...data } = validatedData;\r\n\r\n  // Executar a transação\r\n  const result = await prisma.$transaction(async (tx) => {\r\n    // 1. Criar a inspeção\r\n    const inspection = await tx.inspection.create({ data });\r\n\r\n    // 2. Se houver fotos, criar os registros de fotos\r\n    if (photos && photos.length > 0) {\r\n      await tx.inspectionPhoto.createMany({\r\n        data: photos.map((photo) => ({\r\n          inspectionId: inspection.id,\r\n          ...photo\r\n        })),\r\n      });\r\n    }\r\n\r\n    // 3. Retornar a inspeção criada com suas fotos\r\n    return tx.inspection.findUnique({\r\n      where: { id: inspection.id },\r\n      include: { photos: true },\r\n    });\r\n  });\r\n\r\n  return result;\r\n}\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const inspections = await prisma.inspection.findMany({\r\n      where: { status: 'INSPECAO' },\r\n      include: {\r\n        vehicle: true,\r\n        user: {\r\n          select: {\r\n            name: true\r\n          }\r\n        }\r\n      },\r\n      orderBy: { dataInspecao: \"desc\" }\r\n    });\r\n    return NextResponse.json(inspections, { status: 200 });\r\n  } catch (error) {\r\n    return NextResponse.json(error, { status: 500 });\r\n  } finally {\r\n    await prisma.$disconnect();\r\n  }\r\n}\r\n\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const data = await request.json();\r\n    // Validar os dados recebidos\r\n    const response = await transaction(data);\r\n    return NextResponse.json(response, { status: 201 });\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      return NextResponse.json(\r\n        { error: 'Dados inválidos', details: error.errors },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json(\r\n      { error: 'Erro interno do servidor' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAGA,eAAe,YAAY,aAAiC;IAC1D,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,GAAG;IAE5B,uBAAuB;IACvB,MAAM,SAAS,MAAM,+GAAA,CAAA,SAAM,CAAC,YAAY,CAAC,OAAO;QAC9C,sBAAsB;QACtB,MAAM,aAAa,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;YAAE;QAAK;QAErD,kDAAkD;QAClD,IAAI,UAAU,OAAO,MAAM,GAAG,GAAG;YAC/B,MAAM,GAAG,eAAe,CAAC,UAAU,CAAC;gBAClC,MAAM,OAAO,GAAG,CAAC,CAAC,QAAU,CAAC;wBAC3B,cAAc,WAAW,EAAE;wBAC3B,GAAG,KAAK;oBACV,CAAC;YACH;QACF;QAEA,+CAA+C;QAC/C,OAAO,GAAG,UAAU,CAAC,UAAU,CAAC;YAC9B,OAAO;gBAAE,IAAI,WAAW,EAAE;YAAC;YAC3B,SAAS;gBAAE,QAAQ;YAAK;QAC1B;IACF;IAEA,OAAO;AACT;AACO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,cAAc,MAAM,+GAAA,CAAA,SAAM,CAAC,UAAU,CAAC,QAAQ,CAAC;YACnD,OAAO;gBAAE,QAAQ;YAAW;YAC5B,SAAS;gBACP,SAAS;gBACT,MAAM;oBACJ,QAAQ;wBACN,MAAM;oBACR;gBACF;YACF;YACA,SAAS;gBAAE,cAAc;YAAO;QAClC;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,aAAa;YAAE,QAAQ;QAAI;IACtD,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,OAAO;YAAE,QAAQ;QAAI;IAChD,SAAU;QACR,MAAM,+GAAA,CAAA,SAAM,CAAC,WAAW;IAC1B;AACF;AAGO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,6BAA6B;QAC7B,MAAM,WAAW,MAAM,YAAY;QACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,UAAU;YAAE,QAAQ;QAAI;IACnD,EAAE,OAAO,OAAO;QACd,IAAI,iBAAiB,sIAAA,CAAA,IAAC,CAAC,QAAQ,EAAE;YAC/B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;gBAAmB,SAAS,MAAM,MAAM;YAAC,GAClD;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}