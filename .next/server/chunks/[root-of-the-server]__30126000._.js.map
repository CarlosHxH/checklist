{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/carlos.dias/Documents/Apps/mui_CHECKLIST/src/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\r\n\r\nconst globalForPrisma = global as unknown as { prisma: PrismaClient };\r\n\r\nexport const prisma = globalForPrisma.prisma || new PrismaClient();\r\nexport default prisma;\r\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma;\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,kBAAkB;AAEjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;uCACjD;AACf,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/carlos.dias/Documents/Apps/mui_CHECKLIST/src/app/api/v1/keys/pending/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport { prisma } from '@/prisma'\r\n\r\nexport async function GET() {\r\n  try {\r\n    const pendingTransfers = await prisma.vehicleKey.findMany({\r\n      where: {\r\n        status: 'PENDING'\r\n      },\r\n      include: {\r\n        user: {\r\n          select: {\r\n            id: true,\r\n            username: true,\r\n            name: true,\r\n          }\r\n        },\r\n        vehicle: {\r\n          select: {\r\n            id: true,\r\n            plate: true,\r\n            model: true\r\n          }\r\n        }\r\n      },\r\n      orderBy: {\r\n        createdAt: 'desc'\r\n      }\r\n    })\r\n\r\n    return NextResponse.json(pendingTransfers)\r\n  } catch (error) {\r\n    console.error('Error fetching pending transfers:', error)\r\n    return NextResponse.json(\r\n      { error: 'Error fetching pending transfers' },\r\n      { status: 500 }\r\n    )\r\n  }\r\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,mBAAmB,MAAM,+GAAA,CAAA,SAAM,CAAC,UAAU,CAAC,QAAQ,CAAC;YACxD,OAAO;gBACL,QAAQ;YACV;YACA,SAAS;gBACP,MAAM;oBACJ,QAAQ;wBACN,IAAI;wBACJ,UAAU;wBACV,MAAM;oBACR;gBACF;gBACA,SAAS;oBACP,QAAQ;wBACN,IAAI;wBACJ,OAAO;wBACP,OAAO;oBACT;gBACF;YACF;YACA,SAAS;gBACP,WAAW;YACb;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qCAAqC;QACnD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAmC,GAC5C;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}