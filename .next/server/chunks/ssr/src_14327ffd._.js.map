{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/carlos.dias/Documents/Apps/mui_CHECKLIST/src/utils/index.ts"],"sourcesContent":["// src/utils/index.ts\r\n\r\n/**\r\n * Retorna as datas de início e fim para os últimos 30 dias\r\n * @returns Objeto com startDate (data inicial) e endDate (data atual)\r\n */\r\nexport function getLast30Days() {\r\n  const endDate = new Date();\r\n  endDate.setHours(23, 59, 59, 999); // Fim do dia atual\r\n\r\n  const startDate = new Date();\r\n  startDate.setDate(endDate.getDate() - 29); // 30 dias atrás (incluindo hoje)\r\n  startDate.setHours(0, 0, 0, 0); // Início do dia\r\n\r\n  return { startDate, endDate };\r\n}\r\n\r\n/**\r\n * Formata uma data para exibição\r\n * @param date Data a ser formatada\r\n * @returns String no formato DD/MM\r\n */\r\nexport function formatDateShort(date: Date): string {\r\n  return `${String(date.getDate()).padStart(2, '0')}/${String(date.getMonth() + 1).padStart(2, '0')}`;\r\n}\r\n\r\n/**\r\n * Gera um array com as representações de datas dos últimos 30 dias\r\n * @returns Array de strings no formato DD/MM\r\n */\r\nexport function getLast30DaysLabels(): string[] {\r\n  const { startDate } = getLast30Days();\r\n  const labels: string[] = [];\r\n\r\n  for (let i = 0; i < 30; i++) {\r\n    const date = new Date(startDate);\r\n    date.setDate(startDate.getDate() + i);\r\n    labels.push(formatDateShort(date));\r\n  }\r\n\r\n  return labels;\r\n}\r\n\r\nexport function getFullYear(): { startDate: Date, endDate: Date } {\r\n  const currentYear = new Date().getFullYear();\r\n  const startDate = new Date(currentYear, 0, 1);\r\n  const endDate = new Date(currentYear + 1, 0, 1);\r\n  return { startDate, endDate };\r\n}\r\n\r\nexport async function fileToBase64(file: Blob): Promise<string> {\r\n  try {\r\n    const bytes = await file.arrayBuffer();\r\n    const buffer = Buffer.from(bytes);\r\n\r\n    // Fallback for mime type\r\n    const mimeType = 'type' in file ? (file as File).type : 'application/octet-stream';\r\n\r\n    return `data:${mimeType};base64,${buffer.toString('base64')}`;\r\n  } catch (error) {\r\n    console.error('Error converting file to base64:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/*export async function fileToBase64(file: File): Promise<string> {\r\n  const bytes = await file.arrayBuffer();\r\n  const buffer = Buffer.from(bytes);\r\n  return `data:${file.type};base64,${buffer.toString('base64')}`;\r\n}\r\n*/\r\n\r\nexport async function getBase64(file: File) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader()\r\n    reader.readAsDataURL(file)\r\n    reader.onload = () => {\r\n      resolve(reader.result)\r\n    }\r\n    reader.onerror = reject\r\n  })\r\n}\r\n\r\nexport function getDaysInMonth(\r\n  month: number = new Date().getMonth() + 1,\r\n  year: number = new Date().getFullYear()\r\n) {\r\n  const date = new Date(year, month, 0);\r\n  const monthName = date.toLocaleDateString(\"pt-BR\", {\r\n    month: \"short\",\r\n  });\r\n  const daysInMonth = date.getDate();\r\n  const days = [];\r\n  let i = 1;\r\n  while (days.length < daysInMonth) {\r\n    days.push(`${monthName} ${i}`);\r\n    i += 1;\r\n  }\r\n  return days;\r\n}\r\n\r\nexport function filterInspections(obj: any, searchTerm: string): string[] {\r\n  const results: string[] = [];\r\n  function recursiveSearch(current: any, path: string[] = []) {\r\n    // Se for null ou undefined, retorna\r\n    if (current === null || current === undefined) return;\r\n    // Se for string, verifica se inclui o termo buscado\r\n    if (typeof current === \"string\") {\r\n      if (current.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n        results.push([...path, current].join(\" > \"));\r\n      }\r\n      return;\r\n    }\r\n    // Se for array, percorre cada elemento\r\n    if (Array.isArray(current)) {\r\n      current.forEach((item, index) => {\r\n        recursiveSearch(item, [...path, `[${index}]`]);\r\n      });\r\n      return;\r\n    }\r\n    // Se for objeto, percorre suas propriedades\r\n    if (typeof current === \"object\") {\r\n      Object.entries(current).forEach(([key, value]) => recursiveSearch(value, [...path, key]));\r\n    }\r\n  }\r\n  recursiveSearch(obj);\r\n  return results || obj;\r\n}\r\n\r\nexport function formatDate(date: Date | string, format = 'yyyy-MM-dd') {\r\n  if(typeof date === 'string') date = new Date(date);\r\n  const pad = (num: number): string => num.toString().padStart(2, '0');\r\n  return format\r\n    .replace('yyyy', date.getFullYear().toString())\r\n    .replace('yy', date.getFullYear().toString().slice(2))\r\n    .replace('MM', pad(date.getMonth() + 1))\r\n    .replace('dd', pad(date.getDate()))\r\n    .replace('HH', pad(date.getHours()))\r\n    .replace('mm', pad(date.getMinutes()))\r\n    .replace('ss', pad(date.getSeconds()));\r\n}\r\n\r\ninterface CSVOptions {\r\n  filename?: string;\r\n  delimiter?: string;\r\n  headers?: string[];\r\n  dateFormat?: string;\r\n}\r\n\r\n/**\r\n * Utility class to handle CSV exports\r\n */\r\nexport class CSVExporter {\r\n  private static formatDate(date: Date, format = 'yyyy-MM-dd') {\r\n    const pad = (num: number): string => num.toString().padStart(2, '0');\r\n\r\n    return format\r\n      .replace('yyyy', date.getFullYear().toString())\r\n      .replace('MM', pad(date.getMonth() + 1))\r\n      .replace('dd', pad(date.getDate()))\r\n      .replace('HH', pad(date.getHours()))\r\n      .replace('mm', pad(date.getMinutes()))\r\n      .replace('ss', pad(date.getSeconds()));\r\n  }\r\n\r\n  private static formatValue(value: any): string {\r\n    if (value === null || value === undefined) return '';\r\n    if (value instanceof Date) return this.formatDate(value);\r\n    if (typeof value === 'object') return JSON.stringify(value);\r\n    return String(value);\r\n  }\r\n\r\n  /**\r\n   * Exports array of objects to CSV\r\n   */\r\n  static export<T extends object>(\r\n    data: T[],\r\n    options: CSVOptions = {}\r\n  ): void {\r\n    const {\r\n      filename = `export_${this.formatDate(new Date(), 'yyyy-MM-dd_HHmmss')}.csv`,\r\n      delimiter = ';',\r\n      headers,\r\n      dateFormat\r\n    } = options;\r\n\r\n    if (!data.length) {\r\n      console.warn('No data to export');\r\n      return;\r\n    }\r\n\r\n    // Get headers from first object if not provided\r\n    const csvHeaders = headers || Object.keys(data[0]);\r\n\r\n    // Create CSV content\r\n    const csvContent = [\r\n      // Headers row\r\n      csvHeaders.join(delimiter),\r\n      // Data rows\r\n      ...data.map(item =>\r\n        csvHeaders\r\n          .map(header => {\r\n            const value = (item as any)[header];\r\n\r\n            // Format date if dateFormat is provided\r\n            if (value instanceof Date && dateFormat) {\r\n              return this.formatDate(value, dateFormat);\r\n            }\r\n\r\n            // Escape values containing delimiter or quotes\r\n            const formattedValue = this.formatValue(value);\r\n            if (formattedValue.includes(delimiter) || formattedValue.includes('\"')) {\r\n              return `\"${formattedValue.replace(/\"/g, '\"\"')}\"`;\r\n            }\r\n\r\n            return formattedValue;\r\n          })\r\n          .join(delimiter)\r\n      )\r\n    ].join('\\n');\r\n\r\n    // Create and download file\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const link = document.createElement('a');\r\n    /*\r\n    if (navigator.msSaveBlob) { // IE 10+\r\n      navigator.msSaveBlob(blob, filename);\r\n      return;\r\n    }*/\r\n\r\n    const url = URL.createObjectURL(blob);\r\n    link.href = url;\r\n    link.setAttribute('download', filename);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  }\r\n}\r\n/*\r\n// Example usage:\r\ninterface User {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n  birthDate: Date;\r\n  active: boolean;\r\n  metadata?: Record<string, any>;\r\n}\r\n/*\r\n// Example data\r\nconst users: User[] = [\r\n  {\r\n    id: 1,\r\n    name: 'John Doe',\r\n    email: 'john@example.com',\r\n    birthDate: new Date('1990-05-15'),\r\n    active: true,\r\n    metadata: { role: 'admin' }\r\n  },\r\n  // ... more users\r\n];\r\n/*\r\n// Basic usage\r\nCSVExporter.exportToCSV(users);\r\n\r\n// Advanced usage with options\r\nCSVExporter.exportToCSV(users, {\r\n  filename: 'users_export.csv',\r\n  delimiter: ';',\r\n  headers: ['ID', 'Name', 'Email', 'Birth Date', 'Status', 'Metadata'],\r\n  dateFormat: 'dd/MM/yyyy'\r\n});*/"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/carlos.dias/Documents/Apps/mui_CHECKLIST/src/lib/ultils.ts"],"sourcesContent":["export const fakeArray = (value: number) =>\r\n  Array.from({ length: value }, (_, i) => i + 1);\r\n\r\nexport const fetcher = (url: string) => fetch(url).then((r) => r.json());\r\n\r\nexport const hoje = (() => new Date().toLocaleString(\"pt-BR\"))();\r\n/*\r\nexport const formatDate = (dateString: string | Date) => {\r\n  return new Date(dateString).toLocaleDateString(\"pt-BR\");\r\n};*/\r\n\r\n// Formatar a data para exibição\r\nexport const formatDate = (dateString: string) => {\r\n  const date = new Date(dateString);\r\n  return new Intl.DateTimeFormat(\"pt-BR\", {\r\n    day: \"2-digit\",\r\n    month: \"2-digit\",\r\n    year: \"numeric\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  }).format(date);\r\n};\r\n\r\nexport const stringToDate = (isoString: string) => {\r\n  return isoString.slice(0, 16);\r\n};\r\n\r\nexport const today = () => new Date().toISOString().split(\"T\")[0];\r\nexport type AnyObject = { [key: string]: any };\r\n\r\n/**\r\n * Function to find a string in an object's properties.\r\n * @param obj - The object to search through.\r\n * @param searchString - The string to search for.\r\n * @returns An array of keys where the search string is found.\r\n */\r\nexport function findObject(obj: AnyObject, searchString: string): string[] {\r\n  const foundKeys: string[] = [];\r\n\r\n  // Helper function to recursively search through the object\r\n  function search(obj: AnyObject) {\r\n    for (const key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        const value = obj[key];\r\n\r\n        // Check if the value is a string and contains the search string\r\n        if (typeof value === \"string\" && value.includes(searchString)) {\r\n          foundKeys.push(key);\r\n        }\r\n\r\n        // If the value is an object, search recursively\r\n        if (typeof value === \"object\" && value !== null) {\r\n          search(value);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  search(obj);\r\n  return foundKeys;\r\n}\r\n\r\n/**\r\n * Filtra um array de itens com base em múltiplos critérios de filtro\r\n * @param array O array a ser filtrado\r\n * @param filters Um objeto com chaves representando propriedades e valores representando critérios de filtro\r\n * @returns Um novo array contendo apenas os itens que correspondem a todos os filtros\r\n */\r\nexport function multiFilter<T extends Record<string, any>>(\r\n  array: T[],\r\n  filters: Record<string, string | null | undefined>\r\n): T[] {\r\n  return array.filter((item) => {\r\n    return Object.entries(filters).every(([key, value]) => {\r\n      // Se o valor do filtro for nulo ou indefinido, não aplica o filtro\r\n      if (!value) return true;\r\n\r\n      const filterValues = value.split(\",\").map((v) => v.trim().toLowerCase());\r\n      const itemValue = String(item[key]).toLowerCase();\r\n\r\n      // Verifica se algum dos valores do filtro corresponde ao valor do item\r\n      return filterValues.some((filterValue) => {\r\n        // Lida com comparações numéricas\r\n        if (!isNaN(Number(itemValue)) && !isNaN(Number(filterValue))) {\r\n          return Number(itemValue) === Number(filterValue);\r\n        }\r\n        // Lida com inclusões de string\r\n        return itemValue.includes(filterValue);\r\n      });\r\n    });\r\n  });\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAAO,MAAM,YAAY,CAAC,QACxB,MAAM,IAAI,CAAC;QAAE,QAAQ;IAAM,GAAG,CAAC,GAAG,IAAM,IAAI;AAEvC,MAAM,UAAU,CAAC,MAAgB,MAAM,KAAK,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI;AAE9D,MAAM,OAAO,CAAC,IAAM,IAAI,OAAO,cAAc,CAAC,QAAQ;AAOtD,MAAM,aAAa,CAAC;IACzB,MAAM,OAAO,IAAI,KAAK;IACtB,OAAO,IAAI,KAAK,cAAc,CAAC,SAAS;QACtC,KAAK;QACL,OAAO;QACP,MAAM;QACN,MAAM;QACN,QAAQ;IACV,GAAG,MAAM,CAAC;AACZ;AAEO,MAAM,eAAe,CAAC;IAC3B,OAAO,UAAU,KAAK,CAAC,GAAG;AAC5B;AAEO,MAAM,QAAQ,IAAM,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;AAS1D,SAAS,WAAW,GAAc,EAAE,YAAoB;IAC7D,MAAM,YAAsB,EAAE;IAE9B,2DAA2D;IAC3D,SAAS,OAAO,GAAc;QAC5B,IAAK,MAAM,OAAO,IAAK;YACrB,IAAI,IAAI,cAAc,CAAC,MAAM;gBAC3B,MAAM,QAAQ,GAAG,CAAC,IAAI;gBAEtB,gEAAgE;gBAChE,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,CAAC,eAAe;oBAC7D,UAAU,IAAI,CAAC;gBACjB;gBAEA,gDAAgD;gBAChD,IAAI,OAAO,UAAU,YAAY,UAAU,MAAM;oBAC/C,OAAO;gBACT;YACF;QACF;IACF;IAEA,OAAO;IACP,OAAO;AACT;AAQO,SAAS,YACd,KAAU,EACV,OAAkD;IAElD,OAAO,MAAM,MAAM,CAAC,CAAC;QACnB,OAAO,OAAO,OAAO,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,KAAK,MAAM;YAChD,mEAAmE;YACnE,IAAI,CAAC,OAAO,OAAO;YAEnB,MAAM,eAAe,MAAM,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI,GAAG,WAAW;YACrE,MAAM,YAAY,OAAO,IAAI,CAAC,IAAI,EAAE,WAAW;YAE/C,uEAAuE;YACvE,OAAO,aAAa,IAAI,CAAC,CAAC;gBACxB,iCAAiC;gBACjC,IAAI,CAAC,MAAM,OAAO,eAAe,CAAC,MAAM,OAAO,eAAe;oBAC5D,OAAO,OAAO,eAAe,OAAO;gBACtC;gBACA,+BAA+B;gBAC/B,OAAO,UAAU,QAAQ,CAAC;YAC5B;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/carlos.dias/Documents/Apps/mui_CHECKLIST/src/components/_ui/Photos.tsx"],"sourcesContent":["import { Box, Typography } from \"@mui/material\";\r\nimport { PhotoProvider, PhotoView } from \"react-photo-view\";\r\nimport Image from 'next/image';\r\n\r\ntype photosType = {\r\n  id: string;\r\n  type: string;\r\n  photo: string;\r\n  description: string;\r\n}[];\r\n\r\n\r\nconst Photos: React.FC<{ photos: photosType, title: string }> = ({ photos, title }) => {\r\n  return (\r\n    <Box mt={2}>\r\n      <Typography variant=\"h6\" gutterBottom>{title}</Typography>\r\n      <PhotoProvider>\r\n        <Box mt={2} style={{ display: 'flex', flexWrap: 'wrap', gap: 4 }}>\r\n          {photos.map((photo) => (\r\n            <PhotoView key={photo.id} src={photo.photo}>\r\n              <Image width={100} height={100} src={photo.photo} alt={photo.type} />\r\n            </PhotoView>\r\n          ))}\r\n        </Box>\r\n      </PhotoProvider>\r\n    </Box>\r\n  )\r\n}\r\nexport default Photos;"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AACA;;;;;AAUA,MAAM,SAA0D,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE;IAChF,qBACE,8OAAC,iLAAA,CAAA,MAAG;QAAC,IAAI;;0BACP,8OAAC,sMAAA,CAAA,aAAU;gBAAC,SAAQ;gBAAK,YAAY;0BAAE;;;;;;0BACvC,8OAAC,kLAAA,CAAA,gBAAa;0BACZ,cAAA,8OAAC,iLAAA,CAAA,MAAG;oBAAC,IAAI;oBAAG,OAAO;wBAAE,SAAS;wBAAQ,UAAU;wBAAQ,KAAK;oBAAE;8BAC5D,OAAO,GAAG,CAAC,CAAC,sBACX,8OAAC,kLAAA,CAAA,YAAS;4BAAgB,KAAK,MAAM,KAAK;sCACxC,cAAA,8OAAC,6HAAA,CAAA,UAAK;gCAAC,OAAO;gCAAK,QAAQ;gCAAK,KAAK,MAAM,KAAK;gCAAE,KAAK,MAAM,IAAI;;;;;;2BADnD,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;AAQpC;uCACe","debugId":null}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/carlos.dias/Documents/Apps/mui_CHECKLIST/src/app/dashboard/viagens/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\r\nimport React from 'react';\r\nimport { Box, Card, CardContent, Typography, Grid, Chip, Divider, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Avatar } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport DirectionsCarIcon from '@mui/icons-material/DirectionsCar';\r\nimport ScheduleIcon from '@mui/icons-material/Schedule';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport { formatDate } from '@/utils';\r\nimport { fetcher } from '@/lib/ultils';\r\nimport useSWR from 'swr';\r\nimport { useParams } from 'next/navigation';\r\nimport Photos from '@/components/_ui/Photos';\r\nimport 'react-photo-view/dist/react-photo-view.css';\r\n\r\n// Tipos baseados na API\r\ninterface Photo {\r\n  id: string;\r\n  inspectionId: string;\r\n  description: string;\r\n  photo: string;\r\n  createdAt: string;\r\n  type: string;\r\n}\r\n\r\ninterface InspectionData {\r\n  id: string;\r\n  userId: string;\r\n  vehicleId: string;\r\n  vehicleKey: string | null;\r\n  dataInspecao?: string;\r\n  status: 'INICIO' | 'FINAL';\r\n  crlvEmDia: string;\r\n  certificadoTacografoEmDia: string | null;\r\n  nivelAgua: string;\r\n  nivelOleo: string;\r\n  eixo: string;\r\n  dianteira: string;\r\n  descricaoDianteira: string;\r\n  tracao: string;\r\n  descricaoTracao: string;\r\n  truck: string;\r\n  descricaoTruck: string;\r\n  quartoEixo: string | null;\r\n  descricaoQuartoEixo: string | null;\r\n  avariasCabine: string;\r\n  descricaoAvariasCabine: string | null;\r\n  bauPossuiAvarias: string;\r\n  descricaoAvariasBau: string | null;\r\n  funcionamentoParteEletrica: string;\r\n  descricaoParteEletrica: string | null;\r\n  createdAt: string;\r\n  updatedAt: string | null;\r\n  kilometer: string;\r\n  isFinished: boolean;\r\n  extintor: string;\r\n  photos: Photo[];\r\n}\r\n\r\ninterface Vehicle {\r\n  id: string;\r\n  make: string;\r\n  model: string;\r\n  year: string;\r\n  eixo: string;\r\n  plate: string;\r\n  createdAt: string;\r\n  updatedAt: string | null;\r\n  fixo: boolean;\r\n  cidadeBase: string | null;\r\n  tacografo: boolean;\r\n}\r\n\r\ninterface User {\r\n  name: string;\r\n}\r\n\r\ninterface Inspection {\r\n  id: string;\r\n  userId: string;\r\n  startId: string;\r\n  endId: string;\r\n  vehicleId: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  user: User;\r\n  start: InspectionData;\r\n  end: InspectionData;\r\n  vehicle: Vehicle;\r\n}\r\n\r\ninterface ApiResponse {\r\n  inspections: Inspection;\r\n}\r\n\r\nconst StyledStatus = styled(Chip)(({ theme, color }) => ({\r\n  fontWeight: 'bold',\r\n  color: color === 'success' ? theme.palette.success.main :\r\n    color === 'warning' ? theme.palette.warning.main :\r\n      theme.palette.error.main,\r\n  backgroundColor: color === 'success' ? theme.palette.success.light :\r\n    color === 'warning' ? theme.palette.warning.light :\r\n      theme.palette.error.light,\r\n}));\r\n\r\n// Componente principal\r\nconst VehicleInspectionDetail: React.FC = () => {\r\n  const { id } = useParams();\r\n  const { data, isLoading } = useSWR<ApiResponse>(`/api/v2/dashboard/viagens/${id}`, fetcher);\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (!data) return <div>Error loading data</div>;\r\n\r\n  const { inspections: inspection } = data;\r\n  const { vehicle, start, end, user } = inspection;\r\n\r\n  const format = (dateString: string) => {\r\n    const date = new Date(dateString);\r\n    return formatDate(date);\r\n  };\r\n\r\n  const getStatusColor = (value: string) => {\r\n    if (value === 'BOM' || value === 'NORMAL' || value === 'SIM') {\r\n      return 'success';\r\n    } else if (value === 'REGULAR') {\r\n      return 'warning';\r\n    } else {\r\n      return 'error';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 1200, margin: '0 auto', p: 2 }}>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n        Relatório de Inspeção de Veículo\r\n      </Typography>\r\n\r\n      <Card sx={{ mb: 4 }}>\r\n        <CardContent>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={6}>\r\n              <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n                <DirectionsCarIcon sx={{ mr: 1 }} />\r\n                <Typography variant=\"h6\">\r\n                  {vehicle.make} {vehicle.model} ({vehicle.year})\r\n                </Typography>\r\n              </Box>\r\n              <Typography variant=\"body1\">\r\n                <strong>Placa:</strong> {vehicle.plate}\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                <strong>Eixos:</strong> {vehicle.eixo}\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                <strong>Tacógrafo:</strong> {vehicle.tacografo ? 'Sim' : 'Não'}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n                <PersonIcon sx={{ mr: 1 }} />\r\n                <Typography variant=\"h6\">Inspetor: {user.name}</Typography>\r\n              </Box>\r\n              <Typography variant=\"body1\">\r\n                <strong>Data de Criação:</strong> {format(inspection.createdAt)}\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                <strong>Última Atualização:</strong> {format(inspection.updatedAt)}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Grid container spacing={3}>\r\n        {/* Seção de início da inspeção */}\r\n        {start && <Grid item xs={12} md={6}>\r\n          <Paper elevation={3} sx={{ p: 2 }}>\r\n            <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n              <ScheduleIcon sx={{ mr: 1 }} />\r\n              <Typography variant=\"h6\">Início da Inspeção</Typography>\r\n            </Box>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" mb={2}>\r\n              {start?.dataInspecao ? format(start.dataInspecao) : 'Data não disponível'}\r\n            </Typography>\r\n\r\n            <Typography variant=\"body1\" mb={1}>\r\n              <strong>Quilometragem:</strong> {Number(start.kilometer).toLocaleString()} km\r\n            </Typography>\r\n\r\n            <Divider sx={{ my: 2 }} />\r\n\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              Documentação e Segurança\r\n            </Typography>\r\n            <Grid container spacing={1} mb={2}>\r\n              <Grid item xs={6}>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <Typography variant=\"body2\">CRLV em Dia:</Typography>\r\n                  <StyledStatus\r\n                    label={start.crlvEmDia}\r\n                    size=\"small\"\r\n                    color={getStatusColor(start.crlvEmDia)}\r\n                    sx={{ ml: 1 }}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <Typography variant=\"body2\">Extintor:</Typography>\r\n                  <StyledStatus\r\n                    label={start.extintor}\r\n                    size=\"small\"\r\n                    color={getStatusColor(start.extintor)}\r\n                    sx={{ ml: 1 }}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Divider sx={{ my: 2 }} />\r\n\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              Níveis de Fluidos\r\n            </Typography>\r\n            <Grid container spacing={1} mb={2}>\r\n              <Grid item xs={6}>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <Typography variant=\"body2\">Água:</Typography>\r\n                  <StyledStatus\r\n                    label={start.nivelAgua}\r\n                    size=\"small\"\r\n                    color={getStatusColor(start.nivelAgua)}\r\n                    sx={{ ml: 1 }}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <Typography variant=\"body2\">Óleo:</Typography>\r\n                  <StyledStatus\r\n                    label={start.nivelOleo}\r\n                    size=\"small\"\r\n                    color={getStatusColor(start.nivelOleo)}\r\n                    sx={{ ml: 1 }}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Divider sx={{ my: 2 }} />\r\n\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              Pneus e Eixos\r\n            </Typography>\r\n            <TableContainer component={Paper} variant=\"outlined\" sx={{ mb: 2 }}>\r\n              <Table size=\"small\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Posição</TableCell>\r\n                    <TableCell>Estado</TableCell>\r\n                    <TableCell>Observação</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell>Dianteira</TableCell>\r\n                    <TableCell>\r\n                      <StyledStatus\r\n                        label={start.dianteira}\r\n                        size=\"small\"\r\n                        color={getStatusColor(start.dianteira)}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>{start.descricaoDianteira || \"-\"}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Tração</TableCell>\r\n                    <TableCell>\r\n                      <StyledStatus\r\n                        label={start.tracao}\r\n                        size=\"small\"\r\n                        color={getStatusColor(start.tracao)}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>{start.descricaoTracao || \"-\"}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Truck</TableCell>\r\n                    <TableCell>\r\n                      <StyledStatus\r\n                        label={start.truck}\r\n                        size=\"small\"\r\n                        color={getStatusColor(start.truck)}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>{start.descricaoTruck || \"-\"}</TableCell>\r\n                  </TableRow>\r\n                  {start.quartoEixo && (\r\n                    <TableRow>\r\n                      <TableCell>Quarto Eixo</TableCell>\r\n                      <TableCell>\r\n                        <StyledStatus\r\n                          label={start.quartoEixo}\r\n                          size=\"small\"\r\n                          color={getStatusColor(start.quartoEixo)}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>{start.descricaoQuartoEixo || \"-\"}</TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n\r\n            <Divider sx={{ my: 2 }} />\r\n\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              Avarias e Sistema Elétrico\r\n            </Typography>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12} sm={6}>\r\n                <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n                  <Typography variant=\"body2\">Avarias na Cabine:</Typography>\r\n                  <StyledStatus\r\n                    label={start.avariasCabine}\r\n                    size=\"small\"\r\n                    color={getStatusColor(start.avariasCabine === \"NÃO\" ? \"SIM\" : \"NÃO\")}\r\n                    sx={{ ml: 1 }}\r\n                  />\r\n                </Box>\r\n                {start.descricaoAvariasCabine && (\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {start.descricaoAvariasCabine}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n                  <Typography variant=\"body2\">Avarias no Baú:</Typography>\r\n                  <StyledStatus\r\n                    label={start.bauPossuiAvarias}\r\n                    size=\"small\"\r\n                    color={getStatusColor(start.bauPossuiAvarias === \"NÃO\" ? \"SIM\" : \"NÃO\")}\r\n                    sx={{ ml: 1 }}\r\n                  />\r\n                </Box>\r\n                {start.descricaoAvariasBau && (\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {start.descricaoAvariasBau}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n                  <Typography variant=\"body2\">Parte Elétrica:</Typography>\r\n                  <StyledStatus\r\n                    label={start.funcionamentoParteEletrica}\r\n                    size=\"small\"\r\n                    color={getStatusColor(start.funcionamentoParteEletrica)}\r\n                    sx={{ ml: 1 }}\r\n                  />\r\n                </Box>\r\n                {start.descricaoParteEletrica && (\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {start.descricaoParteEletrica}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {start.photos && start.photos.length > 0 && (\r\n              <Box mt={3}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Fotos\r\n                </Typography>\r\n                <Photos photos={start.photos.filter(d => d.type === \"vehicle\")} title={'Fotos do veiculo'} />\r\n              </Box>\r\n            )}\r\n          </Paper>\r\n        </Grid>}\r\n\r\n        {/* Seção de fim da inspeção */}\r\n        {end && <Grid item xs={12} md={6}>\r\n          <Paper elevation={3} sx={{ p: 2 }}>\r\n            <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n              <ScheduleIcon sx={{ mr: 1 }} />\r\n              <Typography variant=\"h6\">Fim da Inspeção</Typography>\r\n            </Box>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" mb={2}>\r\n              {end?.dataInspecao ? format(end.dataInspecao) : 'Data não disponível'}\r\n            </Typography>\r\n\r\n            <Typography variant=\"body1\" mb={1}>\r\n              <strong>Quilometragem:</strong> {Number(end.kilometer).toLocaleString()} km\r\n            </Typography>\r\n\r\n            <Divider sx={{ my: 2 }} />\r\n\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              Documentação e Segurança\r\n            </Typography>\r\n            <Grid container spacing={1} mb={2}>\r\n              <Grid item xs={6}>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <Typography variant=\"body2\">CRLV em Dia:</Typography>\r\n                  <StyledStatus\r\n                    label={end.crlvEmDia}\r\n                    size=\"small\"\r\n                    color={getStatusColor(end.crlvEmDia)}\r\n                    sx={{ ml: 1 }}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <Typography variant=\"body2\">Extintor:</Typography>\r\n                  <StyledStatus\r\n                    label={end.extintor}\r\n                    size=\"small\"\r\n                    color={getStatusColor(end.extintor)}\r\n                    sx={{ ml: 1 }}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Divider sx={{ my: 2 }} />\r\n\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              Níveis de Fluidos\r\n            </Typography>\r\n            <Grid container spacing={1} mb={2}>\r\n              <Grid item xs={6}>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <Typography variant=\"body2\">Água:</Typography>\r\n                  <StyledStatus\r\n                    label={end.nivelAgua}\r\n                    size=\"small\"\r\n                    color={getStatusColor(end.nivelAgua)}\r\n                    sx={{ ml: 1 }}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <Typography variant=\"body2\">Óleo:</Typography>\r\n                  <StyledStatus\r\n                    label={end.nivelOleo}\r\n                    size=\"small\"\r\n                    color={getStatusColor(end.nivelOleo)}\r\n                    sx={{ ml: 1 }}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Divider sx={{ my: 2 }} />\r\n\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              Pneus e Eixos\r\n            </Typography>\r\n            <TableContainer component={Paper} variant=\"outlined\" sx={{ mb: 2 }}>\r\n              <Table size=\"small\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Posição</TableCell>\r\n                    <TableCell>Estado</TableCell>\r\n                    <TableCell>Observação</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell>Dianteira</TableCell>\r\n                    <TableCell>\r\n                      <StyledStatus\r\n                        label={end.dianteira}\r\n                        size=\"small\"\r\n                        color={getStatusColor(end.dianteira)}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>{end.descricaoDianteira || \"-\"}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Tração</TableCell>\r\n                    <TableCell>\r\n                      <StyledStatus\r\n                        label={end.tracao}\r\n                        size=\"small\"\r\n                        color={getStatusColor(end.tracao)}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>{end.descricaoTracao || \"-\"}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Truck</TableCell>\r\n                    <TableCell>\r\n                      <StyledStatus\r\n                        label={end.truck}\r\n                        size=\"small\"\r\n                        color={getStatusColor(end.truck)}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>{end.descricaoTruck || \"-\"}</TableCell>\r\n                  </TableRow>\r\n                  {end.quartoEixo && (\r\n                    <TableRow>\r\n                      <TableCell>Quarto Eixo</TableCell>\r\n                      <TableCell>\r\n                        <StyledStatus\r\n                          label={end.quartoEixo}\r\n                          size=\"small\"\r\n                          color={getStatusColor(end.quartoEixo)}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>{end.descricaoQuartoEixo || \"-\"}</TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n\r\n            <Divider sx={{ my: 2 }} />\r\n\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              Avarias e Sistema Elétrico\r\n            </Typography>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12} sm={6}>\r\n                <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n                  <Typography variant=\"body2\">Avarias na Cabine:</Typography>\r\n                  <StyledStatus\r\n                    label={end.avariasCabine}\r\n                    size=\"small\"\r\n                    color={getStatusColor(end.avariasCabine === \"NÃO\" ? \"SIM\" : \"NÃO\")}\r\n                    sx={{ ml: 1 }}\r\n                  />\r\n                </Box>\r\n                {end.descricaoAvariasCabine && (\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {end.descricaoAvariasCabine}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n                  <Typography variant=\"body2\">Avarias no Baú:</Typography>\r\n                  <StyledStatus\r\n                    label={end.bauPossuiAvarias}\r\n                    size=\"small\"\r\n                    color={getStatusColor(end.bauPossuiAvarias === \"NÃO\" ? \"SIM\" : \"NÃO\")}\r\n                    sx={{ ml: 1 }}\r\n                  />\r\n                </Box>\r\n                {end.descricaoAvariasBau && (\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {end.descricaoAvariasBau}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n                  <Typography variant=\"body2\">Parte Elétrica:</Typography>\r\n                  <StyledStatus\r\n                    label={end.funcionamentoParteEletrica}\r\n                    size=\"small\"\r\n                    color={getStatusColor(end.funcionamentoParteEletrica)}\r\n                    sx={{ ml: 1 }}\r\n                  />\r\n                </Box>\r\n                {end.descricaoParteEletrica && (\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {end.descricaoParteEletrica}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {end.photos && end.photos.length > 0 && (\r\n              <Box mt={3}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Fotos\r\n                </Typography>\r\n                <Photos photos={end.photos.filter(d => d.type === \"vehicle\")} title={'Fotos do veiculo'} />\r\n              </Box>\r\n            )}\r\n          </Paper>\r\n        </Grid>}\r\n      </Grid>\r\n\r\n      {/*<Box mt={3} display=\"flex\" justifyContent=\"center\">\r\n        <Button \r\n          variant=\"contained\" \r\n          color=\"primary\" \r\n          startIcon={<CheckCircleIcon />}\r\n          sx={{ mr: 2 }}\r\n        >\r\n          Aprovar Inspeção\r\n        </Button>\r\n        <Button \r\n          variant=\"outlined\" \r\n          color=\"warning\" \r\n          startIcon={<WarningIcon />}\r\n        >\r\n          Solicitar Revisão\r\n        </Button>\r\n      </Box>*/}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default VehicleInspectionDetail;"],"names":[],"mappings":"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","debugId":null}}]
}