{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/carlos.dias/Documents/Apps/mui_CHECKLIST/src/components/_ui/HistoryModal.tsx"],"sourcesContent":["import React from 'react';\r\nimport { \r\n  Dialog, \r\n  DialogContent, \r\n  DialogTitle,\r\n  Typography,\r\n  Box,\r\n  Paper\r\n} from '@mui/material';\r\nimport { \r\n  Close, \r\n  CarRental,\r\n  Person,\r\n  AccessTime\r\n} from '@mui/icons-material';\r\n\r\nimport Timeline from '@mui/lab/Timeline';\r\nimport TimelineItem from '@mui/lab/TimelineItem';\r\nimport TimelineSeparator from '@mui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@mui/lab/TimelineConnector';\r\nimport TimelineContent from '@mui/lab/TimelineContent';\r\nimport TimelineDot from '@mui/lab/TimelineDot';\r\n\r\ninterface User {\r\n  id: string\r\n  name: string\r\n}\r\n\r\ninterface Vehicle {\r\n  id: string\r\n  plate: string\r\n  model: string\r\n  vehicleKeys?: VehicleKey[]\r\n}\r\n\r\ninterface VehicleKey {\r\n  id: string\r\n  userId: string\r\n  vehicleId: string\r\n  createdAt: string\r\n  updatedAt: string\r\n  parentId: string | null\r\n  user: User\r\n  vehicle: Vehicle\r\n  status: \"CONFIRMED\" | \"REJECTED\" | \"PENDING\";\r\n}\r\n\r\ninterface HistoryModalProps {\r\n  open: boolean\r\n  onClose: () => void\r\n  vehicleKeys: {\r\n    vehicle: Vehicle\r\n    keys: VehicleKey[]\r\n    latestKey: VehicleKey\r\n  } | null\r\n}\r\n\r\nconst HistoryModal = ({ \r\n  open, \r\n  onClose, \r\n  vehicleKeys \r\n}: HistoryModalProps) => {\r\n  if (!vehicleKeys) return null;\r\n\r\n  // Sort keys from most recent to oldest\r\n  const sortedKeys = [...vehicleKeys.keys].sort(\r\n    (a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\r\n  );\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"xs\" fullWidth>\r\n      <DialogTitle>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Typography variant=\"h6\">\r\n            Histórico do Veículo:\r\n            <Typography>\r\n              <strong> {vehicleKeys.vehicle.model} - {vehicleKeys.vehicle.plate}</strong>\r\n            </Typography>\r\n          </Typography>\r\n          <Close onClick={onClose} sx={{ cursor: 'pointer' }} />\r\n        </Box>\r\n      </DialogTitle>\r\n      \r\n      <DialogContent>\r\n        <Timeline sx={{position:'relative',left:-30}}>\r\n          {sortedKeys.map((key, index) => (\r\n            <TimelineItem key={key.id}>\r\n              <TimelineSeparator>\r\n                <TimelineDot color={index === 0 ? 'primary' : 'grey'}>\r\n                  {index === 0 ? <CarRental /> : <Person />}\r\n                </TimelineDot>\r\n                {index < sortedKeys.length - 1 && <TimelineConnector />}\r\n              </TimelineSeparator>\r\n              \r\n              <TimelineContent>\r\n                <Paper \r\n                  elevation={index === 0 ? 3 : 1}\r\n                  sx={{ \r\n                    p: 2, \r\n                    borderLeft: `4px solid ${index === 0 ? 'primary.main' : 'grey.500'}` \r\n                  }}\r\n                >\r\n                  <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <Typography \r\n                      variant=\"subtitle1\" \r\n                      color={index === 0 ? 'primary.main' : 'text.secondary'}\r\n                    >\r\n                      {index === 0 ? 'Transferência Atual' : `Transferência ${index + 1}`}\r\n                    </Typography>\r\n                    \r\n                    <Box display=\"flex\" alignItems=\"center\" gap={1}>\r\n                      <AccessTime fontSize=\"small\" />\r\n                      <Typography variant=\"body2\">\r\n                        {new Date(key.createdAt).toLocaleString()}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                  \r\n                  <Typography variant=\"body1\" sx={{ mt: 1 }}>\r\n                    Responsável: <b>{key.user.name}</b>\r\n                  </Typography>\r\n\r\n                  <Typography variant=\"body1\" sx={{ mt: 1 }}>\r\n                  {key.status===\"CONFIRMED\"?\"CONFIRMOU A CHAVE\":\"CONFIRMAÇÃO PENDENTE\" }\r\n                  </Typography>\r\n                  \r\n                  <Box sx={{ mt: 1, display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 1 }}>\r\n                    <Typography variant=\"body2\">\r\n                      <strong>Placa:</strong> {key.vehicle.plate}...\r\n                    </Typography>\r\n                    {key.status && (\r\n                      <Typography variant=\"body2\">\r\n                        <strong>Status:</strong> {key.status}\r\n                      </Typography>\r\n                    )}\r\n                  </Box>\r\n                </Paper>\r\n              </TimelineContent>\r\n            </TimelineItem>\r\n          ))}\r\n        </Timeline>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default HistoryModal;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/carlos.dias/Documents/Apps/mui_CHECKLIST/src/lib/ultils.ts"],"sourcesContent":["export const fakeArray = (value: number) =>\r\n  Array.from({ length: value }, (_, i) => i + 1);\r\n\r\nexport const fetcher = (url: string) => fetch(url).then((r) => r.json());\r\n\r\nexport const hoje = (() => new Date().toLocaleString(\"pt-BR\"))();\r\n/*\r\nexport const formatDate = (dateString: string | Date) => {\r\n  return new Date(dateString).toLocaleDateString(\"pt-BR\");\r\n};*/\r\n\r\n// Formatar a data para exibição\r\nexport const formatDate = (dateString: string) => {\r\n  const date = new Date(dateString);\r\n  return new Intl.DateTimeFormat(\"pt-BR\", {\r\n    day: \"2-digit\",\r\n    month: \"2-digit\",\r\n    year: \"numeric\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n  }).format(date);\r\n};\r\n\r\nexport const stringToDate = (isoString: string) => {\r\n  return isoString.slice(0, 16);\r\n};\r\n\r\nexport const today = () => new Date().toISOString().split(\"T\")[0];\r\nexport type AnyObject = { [key: string]: any };\r\n\r\n/**\r\n * Function to find a string in an object's properties.\r\n * @param obj - The object to search through.\r\n * @param searchString - The string to search for.\r\n * @returns An array of keys where the search string is found.\r\n */\r\nexport function findObject(obj: AnyObject, searchString: string): string[] {\r\n  const foundKeys: string[] = [];\r\n\r\n  // Helper function to recursively search through the object\r\n  function search(obj: AnyObject) {\r\n    for (const key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        const value = obj[key];\r\n\r\n        // Check if the value is a string and contains the search string\r\n        if (typeof value === \"string\" && value.includes(searchString)) {\r\n          foundKeys.push(key);\r\n        }\r\n\r\n        // If the value is an object, search recursively\r\n        if (typeof value === \"object\" && value !== null) {\r\n          search(value);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  search(obj);\r\n  return foundKeys;\r\n}\r\n\r\n/**\r\n * Filtra um array de itens com base em múltiplos critérios de filtro\r\n * @param array O array a ser filtrado\r\n * @param filters Um objeto com chaves representando propriedades e valores representando critérios de filtro\r\n * @returns Um novo array contendo apenas os itens que correspondem a todos os filtros\r\n */\r\nexport function multiFilter<T extends Record<string, any>>(\r\n  array: T[],\r\n  filters: Record<string, string | null | undefined>\r\n): T[] {\r\n  return array.filter((item) => {\r\n    return Object.entries(filters).every(([key, value]) => {\r\n      // Se o valor do filtro for nulo ou indefinido, não aplica o filtro\r\n      if (!value) return true;\r\n\r\n      const filterValues = value.split(\",\").map((v) => v.trim().toLowerCase());\r\n      const itemValue = String(item[key]).toLowerCase();\r\n\r\n      // Verifica se algum dos valores do filtro corresponde ao valor do item\r\n      return filterValues.some((filterValue) => {\r\n        // Lida com comparações numéricas\r\n        if (!isNaN(Number(itemValue)) && !isNaN(Number(filterValue))) {\r\n          return Number(itemValue) === Number(filterValue);\r\n        }\r\n        // Lida com inclusões de string\r\n        return itemValue.includes(filterValue);\r\n      });\r\n    });\r\n  });\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAAO,MAAM,YAAY,CAAC,QACxB,MAAM,IAAI,CAAC;QAAE,QAAQ;IAAM,GAAG,CAAC,GAAG,IAAM,IAAI;AAEvC,MAAM,UAAU,CAAC,MAAgB,MAAM,KAAK,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI;AAE9D,MAAM,OAAO,CAAC,IAAM,IAAI,OAAO,cAAc,CAAC,QAAQ;AAOtD,MAAM,aAAa,CAAC;IACzB,MAAM,OAAO,IAAI,KAAK;IACtB,OAAO,IAAI,KAAK,cAAc,CAAC,SAAS;QACtC,KAAK;QACL,OAAO;QACP,MAAM;QACN,MAAM;QACN,QAAQ;IACV,GAAG,MAAM,CAAC;AACZ;AAEO,MAAM,eAAe,CAAC;IAC3B,OAAO,UAAU,KAAK,CAAC,GAAG;AAC5B;AAEO,MAAM,QAAQ,IAAM,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;AAS1D,SAAS,WAAW,GAAc,EAAE,YAAoB;IAC7D,MAAM,YAAsB,EAAE;IAE9B,2DAA2D;IAC3D,SAAS,OAAO,GAAc;QAC5B,IAAK,MAAM,OAAO,IAAK;YACrB,IAAI,IAAI,cAAc,CAAC,MAAM;gBAC3B,MAAM,QAAQ,GAAG,CAAC,IAAI;gBAEtB,gEAAgE;gBAChE,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,CAAC,eAAe;oBAC7D,UAAU,IAAI,CAAC;gBACjB;gBAEA,gDAAgD;gBAChD,IAAI,OAAO,UAAU,YAAY,UAAU,MAAM;oBAC/C,OAAO;gBACT;YACF;QACF;IACF;IAEA,OAAO;IACP,OAAO;AACT;AAQO,SAAS,YACd,KAAU,EACV,OAAkD;IAElD,OAAO,MAAM,MAAM,CAAC,CAAC;QACnB,OAAO,OAAO,OAAO,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,KAAK,MAAM;YAChD,mEAAmE;YACnE,IAAI,CAAC,OAAO,OAAO;YAEnB,MAAM,eAAe,MAAM,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI,GAAG,WAAW;YACrE,MAAM,YAAY,OAAO,IAAI,CAAC,IAAI,EAAE,WAAW;YAE/C,uEAAuE;YACvE,OAAO,aAAa,IAAI,CAAC,CAAC;gBACxB,iCAAiC;gBACjC,IAAI,CAAC,MAAM,OAAO,eAAe,CAAC,MAAM,OAAO,eAAe;oBAC5D,OAAO,OAAO,eAAe,OAAO;gBACtC;gBACA,+BAA+B;gBAC/B,OAAO,UAAU,QAAQ,CAAC;YAC5B;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 395, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/carlos.dias/Documents/Apps/mui_CHECKLIST/src/components/Loading.tsx"],"sourcesContent":["import { Box, CircularProgress } from \"@mui/material\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n        zIndex: 9999,\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n      }}\r\n    >\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Loading;"],"names":[],"mappings":";;;;AAAA;AAAA;;;AAEA,MAAM,UAAU;IACd,qBACE,8OAAC,iLAAA,CAAA,MAAG;QACF,IAAI;YACF,SAAS;YACT,iBAAiB;YACjB,gBAAgB;YAChB,YAAY;YACZ,QAAQ;YACR,OAAO;YACP,QAAQ;YACR,UAAU;YACV,KAAK;YACL,MAAM;QACR;kBAEA,cAAA,8OAAC,wNAAA,CAAA,mBAAgB;;;;;;;;;;AAGvB;uCAEe","debugId":null}},
    {"offset": {"line": 435, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/carlos.dias/Documents/Apps/mui_CHECKLIST/src/utils/index.ts"],"sourcesContent":["// src/utils/index.ts\r\n\r\n/**\r\n * Retorna as datas de início e fim para os últimos 30 dias\r\n * @returns Objeto com startDate (data inicial) e endDate (data atual)\r\n */\r\nexport function getLast30Days() {\r\n  const endDate = new Date();\r\n  endDate.setHours(23, 59, 59, 999); // Fim do dia atual\r\n\r\n  const startDate = new Date();\r\n  startDate.setDate(endDate.getDate() - 29); // 30 dias atrás (incluindo hoje)\r\n  startDate.setHours(0, 0, 0, 0); // Início do dia\r\n\r\n  return { startDate, endDate };\r\n}\r\n\r\n/**\r\n * Formata uma data para exibição\r\n * @param date Data a ser formatada\r\n * @returns String no formato DD/MM\r\n */\r\nexport function formatDateShort(date: Date): string {\r\n  return `${String(date.getDate()).padStart(2, '0')}/${String(date.getMonth() + 1).padStart(2, '0')}`;\r\n}\r\n\r\n/**\r\n * Gera um array com as representações de datas dos últimos 30 dias\r\n * @returns Array de strings no formato DD/MM\r\n */\r\nexport function getLast30DaysLabels(): string[] {\r\n  const { startDate } = getLast30Days();\r\n  const labels: string[] = [];\r\n\r\n  for (let i = 0; i < 30; i++) {\r\n    const date = new Date(startDate);\r\n    date.setDate(startDate.getDate() + i);\r\n    labels.push(formatDateShort(date));\r\n  }\r\n\r\n  return labels;\r\n}\r\n\r\nexport function getFullYear(): { startDate: Date, endDate: Date } {\r\n  const currentYear = new Date().getFullYear();\r\n  const startDate = new Date(currentYear, 0, 1);\r\n  const endDate = new Date(currentYear + 1, 0, 1);\r\n  return { startDate, endDate };\r\n}\r\n\r\nexport async function fileToBase64(file: Blob): Promise<string> {\r\n  try {\r\n    const bytes = await file.arrayBuffer();\r\n    const buffer = Buffer.from(bytes);\r\n\r\n    // Fallback for mime type\r\n    const mimeType = 'type' in file ? (file as File).type : 'application/octet-stream';\r\n\r\n    return `data:${mimeType};base64,${buffer.toString('base64')}`;\r\n  } catch (error) {\r\n    console.error('Error converting file to base64:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/*export async function fileToBase64(file: File): Promise<string> {\r\n  const bytes = await file.arrayBuffer();\r\n  const buffer = Buffer.from(bytes);\r\n  return `data:${file.type};base64,${buffer.toString('base64')}`;\r\n}\r\n*/\r\n\r\nexport async function getBase64(file: File) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader()\r\n    reader.readAsDataURL(file)\r\n    reader.onload = () => {\r\n      resolve(reader.result)\r\n    }\r\n    reader.onerror = reject\r\n  })\r\n}\r\n\r\nexport function getDaysInMonth(\r\n  month: number = new Date().getMonth() + 1,\r\n  year: number = new Date().getFullYear()\r\n) {\r\n  const date = new Date(year, month, 0);\r\n  const monthName = date.toLocaleDateString(\"pt-BR\", {\r\n    month: \"short\",\r\n  });\r\n  const daysInMonth = date.getDate();\r\n  const days = [];\r\n  let i = 1;\r\n  while (days.length < daysInMonth) {\r\n    days.push(`${monthName} ${i}`);\r\n    i += 1;\r\n  }\r\n  return days;\r\n}\r\n\r\nexport function filterInspections(obj: any, searchTerm: string): string[] {\r\n  const results: string[] = [];\r\n  function recursiveSearch(current: any, path: string[] = []) {\r\n    // Se for null ou undefined, retorna\r\n    if (current === null || current === undefined) return;\r\n    // Se for string, verifica se inclui o termo buscado\r\n    if (typeof current === \"string\") {\r\n      if (current.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n        results.push([...path, current].join(\" > \"));\r\n      }\r\n      return;\r\n    }\r\n    // Se for array, percorre cada elemento\r\n    if (Array.isArray(current)) {\r\n      current.forEach((item, index) => {\r\n        recursiveSearch(item, [...path, `[${index}]`]);\r\n      });\r\n      return;\r\n    }\r\n    // Se for objeto, percorre suas propriedades\r\n    if (typeof current === \"object\") {\r\n      Object.entries(current).forEach(([key, value]) => recursiveSearch(value, [...path, key]));\r\n    }\r\n  }\r\n  recursiveSearch(obj);\r\n  return results || obj;\r\n}\r\n\r\nexport function formatDate(date: Date | string, format = 'yyyy-MM-dd') {\r\n  if(typeof date === 'string') date = new Date(date);\r\n  const pad = (num: number): string => num.toString().padStart(2, '0');\r\n  return format\r\n    .replace('yyyy', date.getFullYear().toString())\r\n    .replace('yy', date.getFullYear().toString().slice(2))\r\n    .replace('MM', pad(date.getMonth() + 1))\r\n    .replace('dd', pad(date.getDate()))\r\n    .replace('HH', pad(date.getHours()))\r\n    .replace('mm', pad(date.getMinutes()))\r\n    .replace('ss', pad(date.getSeconds()));\r\n}\r\n\r\ninterface CSVOptions {\r\n  filename?: string;\r\n  delimiter?: string;\r\n  headers?: string[];\r\n  dateFormat?: string;\r\n}\r\n\r\n/**\r\n * Utility class to handle CSV exports\r\n */\r\nexport class CSVExporter {\r\n  private static formatDate(date: Date, format = 'yyyy-MM-dd') {\r\n    const pad = (num: number): string => num.toString().padStart(2, '0');\r\n\r\n    return format\r\n      .replace('yyyy', date.getFullYear().toString())\r\n      .replace('MM', pad(date.getMonth() + 1))\r\n      .replace('dd', pad(date.getDate()))\r\n      .replace('HH', pad(date.getHours()))\r\n      .replace('mm', pad(date.getMinutes()))\r\n      .replace('ss', pad(date.getSeconds()));\r\n  }\r\n\r\n  private static formatValue(value: any): string {\r\n    if (value === null || value === undefined) return '';\r\n    if (value instanceof Date) return this.formatDate(value);\r\n    if (typeof value === 'object') return JSON.stringify(value);\r\n    return String(value);\r\n  }\r\n\r\n  /**\r\n   * Exports array of objects to CSV\r\n   */\r\n  static export<T extends object>(\r\n    data: T[],\r\n    options: CSVOptions = {}\r\n  ): void {\r\n    const {\r\n      filename = `export_${this.formatDate(new Date(), 'yyyy-MM-dd_HHmmss')}.csv`,\r\n      delimiter = ';',\r\n      headers,\r\n      dateFormat\r\n    } = options;\r\n\r\n    if (!data.length) {\r\n      console.warn('No data to export');\r\n      return;\r\n    }\r\n\r\n    // Get headers from first object if not provided\r\n    const csvHeaders = headers || Object.keys(data[0]);\r\n\r\n    // Create CSV content\r\n    const csvContent = [\r\n      // Headers row\r\n      csvHeaders.join(delimiter),\r\n      // Data rows\r\n      ...data.map(item =>\r\n        csvHeaders\r\n          .map(header => {\r\n            const value = (item as any)[header];\r\n\r\n            // Format date if dateFormat is provided\r\n            if (value instanceof Date && dateFormat) {\r\n              return this.formatDate(value, dateFormat);\r\n            }\r\n\r\n            // Escape values containing delimiter or quotes\r\n            const formattedValue = this.formatValue(value);\r\n            if (formattedValue.includes(delimiter) || formattedValue.includes('\"')) {\r\n              return `\"${formattedValue.replace(/\"/g, '\"\"')}\"`;\r\n            }\r\n\r\n            return formattedValue;\r\n          })\r\n          .join(delimiter)\r\n      )\r\n    ].join('\\n');\r\n\r\n    // Create and download file\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const link = document.createElement('a');\r\n    /*\r\n    if (navigator.msSaveBlob) { // IE 10+\r\n      navigator.msSaveBlob(blob, filename);\r\n      return;\r\n    }*/\r\n\r\n    const url = URL.createObjectURL(blob);\r\n    link.href = url;\r\n    link.setAttribute('download', filename);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  }\r\n}\r\n/*\r\n// Example usage:\r\ninterface User {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n  birthDate: Date;\r\n  active: boolean;\r\n  metadata?: Record<string, any>;\r\n}\r\n/*\r\n// Example data\r\nconst users: User[] = [\r\n  {\r\n    id: 1,\r\n    name: 'John Doe',\r\n    email: 'john@example.com',\r\n    birthDate: new Date('1990-05-15'),\r\n    active: true,\r\n    metadata: { role: 'admin' }\r\n  },\r\n  // ... more users\r\n];\r\n/*\r\n// Basic usage\r\nCSVExporter.exportToCSV(users);\r\n\r\n// Advanced usage with options\r\nCSVExporter.exportToCSV(users, {\r\n  filename: 'users_export.csv',\r\n  delimiter: ';',\r\n  headers: ['ID', 'Name', 'Email', 'Birth Date', 'Status', 'Metadata'],\r\n  dateFormat: 'dd/MM/yyyy'\r\n});*/"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 660, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/carlos.dias/Documents/Apps/mui_CHECKLIST/src/app/dashboard/keys/page.tsx"],"sourcesContent":["'use client'\r\nimport { useEffect, useState, useCallback } from 'react'\r\nimport {\r\n  Alert, Backdrop, Box, Button, Chip, CircularProgress, Container,\r\n  Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\r\n  FormControl, IconButton, InputLabel, MenuItem, Paper, Select, Snackbar,\r\n  Table, TableBody, TableCell, TableContainer, TableHead, TableRow,\r\n  Typography, useMediaQuery, useTheme\r\n} from '@mui/material'\r\nimport { History } from '@mui/icons-material'\r\nimport CloseIcon from '@mui/icons-material/Close'\r\nimport BookmarkIcon from '@mui/icons-material/Bookmark'\r\nimport HistoryModal from '@/components/_ui/HistoryModal'\r\nimport useSWR from 'swr'\r\nimport { fetcher } from '@/lib/ultils'\r\nimport Loading from '@/components/Loading'\r\nimport { useSession } from 'next-auth/react'\r\nimport { formatDate } from '@/utils'\r\n\r\n// Types\r\ninterface User {\r\n  id: string\r\n  name: string\r\n}\r\n\r\ninterface Vehicle {\r\n  id: string\r\n  plate: string\r\n  model: string\r\n  vehicleKeys?: VehicleKey[]\r\n}\r\n\r\ninterface VehicleKey {\r\n  id: string\r\n  userId: string\r\n  vehicleId: string\r\n  createdAt: string\r\n  updatedAt: string\r\n  parentId: string | null\r\n  user: User\r\n  status: \"CONFIRMED\" | \"PENDING\"\r\n  vehicle: Vehicle\r\n}\r\n\r\ninterface DataType {\r\n  users: User[]\r\n  vehicles: Vehicle[]\r\n  vehicleKeys: VehicleKey[]\r\n}\r\n\r\ninterface GroupedVehicleKeys {\r\n  [vehicleId: string]: {\r\n    vehicle: Vehicle\r\n    keys: VehicleKey[]\r\n    latestKey: VehicleKey\r\n  }\r\n}\r\n\r\ninterface FormData {\r\n  id?: string;\r\n  userId: string\r\n  vehicleId: string\r\n}\r\n\r\nexport default function VehicleKeysPage() {\r\n  const theme = useTheme()\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"))\r\n  const { data: session } = useSession()\r\n\r\n  // Data fetching\r\n  const { data, isLoading, mutate } = useSWR<DataType>('/api/v2/dashboard/keys', fetcher, {\r\n    refreshInterval: 7000, // Poll every 10 seconds instead of real-time socket updates\r\n    revalidateOnFocus: true,\r\n    revalidateOnReconnect: true\r\n  })\r\n\r\n  // State\r\n  const [groupedVehicleKeys, setGroupedVehicleKeys] = useState<GroupedVehicleKeys>({})\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [successMessage, setSuccessMessage] = useState<string | null>(null)\r\n  const [open, setOpen] = useState(false)\r\n  const [historyModalOpen, setHistoryModalOpen] = useState(false)\r\n  const [confirmDialogOpen, setConfirmDialogOpen] = useState(false)\r\n  const [selectedVehicleKeys, setSelectedVehicleKeys] = useState<VehicleKey | null>(null)\r\n  const [formData, setFormData] = useState<FormData>({ userId: '', vehicleId: '' })\r\n  const [isProcessing, setIsProcessing] = useState(false)\r\n\r\n  // Process data when it changes\r\n  useEffect(() => {\r\n    if (data && data.vehicleKeys.length > 0) {\r\n      groupVehicleKeys()\r\n    }\r\n  }, [data])\r\n\r\n  // Helper functions\r\n  const groupVehicleKeys = useCallback(() => {\r\n    if (!data?.vehicleKeys) return;\r\n    const grouped = data.vehicleKeys.reduce<GroupedVehicleKeys>((acc, key) => {\r\n      if (!acc[key.vehicleId]) {\r\n        acc[key.vehicleId] = {\r\n          vehicle: {\r\n            ...key.vehicle,\r\n            vehicleKeys: data.vehicleKeys.filter(k => k.vehicleId === key.vehicleId)\r\n          },\r\n          keys: [],\r\n          latestKey: key\r\n        }\r\n      }\r\n\r\n      acc[key.vehicleId].keys.push(key)\r\n\r\n      if (new Date(key.createdAt) > new Date(acc[key.vehicleId].latestKey.createdAt)) {\r\n        acc[key.vehicleId].latestKey = key\r\n      }\r\n\r\n      return acc\r\n    }, {})\r\n\r\n    setGroupedVehicleKeys(grouped)\r\n  }, [data])\r\n\r\n  const validateForm = (): string | null => {\r\n    if (!formData.vehicleId) return 'Selecione um veículo'\r\n    if (!formData.userId) return 'Selecione um usuário'\r\n\r\n    const currentKey = groupedVehicleKeys[formData.vehicleId]?.latestKey\r\n    if (currentKey && currentKey.userId === formData.userId) {\r\n      return 'A chave já está com este usuário'\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  const getCurrentKeyHolder = (vehicleId: string) => {\r\n    return groupedVehicleKeys[vehicleId]?.latestKey?.user?.name || 'Nenhum'\r\n  }\r\n\r\n  const getCurrentKeyStatusPending = (vehicleId: string) => {\r\n    return groupedVehicleKeys[vehicleId]?.latestKey?.status === \"PENDING\"\r\n  }\r\n\r\n  // Event handlers\r\n  const handleSubmit = () => {\r\n    const validationError = validateForm()\r\n    if (validationError) {\r\n      setError(validationError)\r\n      return\r\n    }\r\n    setConfirmDialogOpen(true)\r\n  }\r\n\r\n  const handleConfirmedSubmit = async () => {\r\n    setConfirmDialogOpen(false)\r\n    setIsProcessing(true)\r\n\r\n    try {\r\n      if(formData.userId === session?.user.id) {\r\n        formData.id = session?.user.id;\r\n      }\r\n      \r\n      const response = await fetch('/api/v2/dashboard/keys', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          ...formData,\r\n          parentId: groupedVehicleKeys[formData.vehicleId]?.latestKey?.id || null\r\n        }),\r\n      })\r\n\r\n      if (!response.ok) throw new Error('Erro ao transferir chave')\r\n\r\n      await response.json();\r\n      setSuccessMessage('Chave transferida com sucesso!')\r\n      handleCloseModal()\r\n      mutate()\r\n    } catch (error) {\r\n      console.error('Error creating vehicle key:', error)\r\n      setError('Erro ao transferir a chave. Tente novamente.')\r\n    } finally {\r\n      setIsProcessing(false)\r\n    }\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setOpen(false)\r\n    setError(null)\r\n    setFormData({ userId: '', vehicleId: '' })\r\n  }\r\n\r\n  const handleCancelNotification = async (latestKey: VehicleKey) => {\r\n    if (!confirm(\"Deseja cancelar a transferência de chave?\")) return\r\n    if (!latestKey) return\r\n\r\n    setIsProcessing(true)\r\n    try {\r\n      const response = await fetch(`/api/v1/keys/reject/${latestKey.id}`, { method: 'POST' })\r\n      if (!response.ok) throw new Error('Erro ao rejeitar transferência')\r\n      mutate()\r\n    } catch (error) {\r\n      setError('Erro ao rejeitar transferência')\r\n    } finally {\r\n      setIsProcessing(false)\r\n    }\r\n  }\r\n\r\n  const handleOpenHistoryModal = (vehicleKey: VehicleKey) => {\r\n    setSelectedVehicleKeys(vehicleKey)\r\n    setHistoryModalOpen(true)\r\n  }\r\n\r\n  const handleReceiveKey = async (vehicleId: string) => {\r\n    if (!confirm(\"Deseja confirmar o recebimento desta chave?\")) return\r\n\r\n    const latestKey = groupedVehicleKeys[vehicleId]?.latestKey;\r\n    if (!latestKey) return;\r\n\r\n    setIsProcessing(true)\r\n    try {\r\n      const response = await fetch(`/api/v1/keys/confirm/${latestKey.id}`, { method: 'POST' })\r\n      if (!response.ok) throw new Error('Erro ao confirmar transferência')\r\n      mutate()\r\n      setSuccessMessage('Transferência confirmada com sucesso!')\r\n    } catch (error) {\r\n      setError('Erro ao confirmar transferência')\r\n    } finally {\r\n      setIsProcessing(false)\r\n    }\r\n  }\r\n\r\n  if (isLoading) return <Loading />\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ mt: 2 }}>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={4}>\r\n        <Typography variant=\"h5\">Gestão de Chaves</Typography>\r\n        <Button variant=\"contained\" onClick={() => setOpen(true)}>Nova Transferência</Button>\r\n      </Box>\r\n\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 2 }} onClose={() => setError(null)}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Responsável Atual</TableCell>\r\n              {!isMobile && <TableCell>Veículo</TableCell>}\r\n              <TableCell>Placa</TableCell>\r\n              {!isMobile && <TableCell>Status</TableCell>}\r\n              {!isMobile && <TableCell>Última Transferência</TableCell>}\r\n              <TableCell>Ações</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {Object.values(groupedVehicleKeys).map((group, i) => {\r\n              const status = group.latestKey.status\r\n              const title = status === 'CONFIRMED' ? 'CONFIRMADO' : 'CONFIRMAÇÃO PENDENTE'\r\n              const color = status === 'CONFIRMED' ? 'green' : 'orange'\r\n              const isCurrentUser = group.latestKey.user.id === session?.user?.id\r\n\r\n              return (\r\n                <TableRow key={i}>\r\n                  <TableCell sx={{fontWeight:'bold', fontSize:16}}>{group.latestKey.user.name}</TableCell>\r\n                  {!isMobile && <TableCell>{group.vehicle.model}</TableCell>}\r\n                  <TableCell>{group.vehicle.plate}</TableCell>\r\n                  {!isMobile && <TableCell sx={{ color }}><Chip label={title} color={status===\"CONFIRMED\"?\"success\":\"error\"}/></TableCell>}\r\n                  {!isMobile && <TableCell>{formatDate(new Date(group.latestKey.createdAt),\"dd/MM/yyyy HH:mm:ss\")}</TableCell>}\r\n                  <TableCell>\r\n                    <Box display=\"flex\" alignItems=\"center\">\r\n                      <IconButton\r\n                        onClick={() => handleOpenHistoryModal(group.latestKey)}\r\n                        title=\"Histórico\"\r\n                        disabled={isProcessing}\r\n                      >\r\n                        <History fontSize=\"small\" />\r\n                        <Typography variant=\"body2\" sx={{ ml: 1 }}>{group.keys.length}</Typography>\r\n                      </IconButton>\r\n                      {status === 'PENDING' && (\r\n                        <IconButton\r\n                          onClick={() => handleCancelNotification(group.latestKey)}\r\n                          title=\"Cancelar notificação\"\r\n                          sx={{ ml: 1 }}\r\n                          disabled={isProcessing}\r\n                        >\r\n                          <CloseIcon fontSize=\"small\" color=\"error\" />\r\n                        </IconButton>\r\n                      )}\r\n\r\n                      {(status === \"PENDING\" && isCurrentUser) && (\r\n                        <IconButton\r\n                          title='Receber chave'\r\n                          onClick={() => handleReceiveKey(group.vehicle.id)}\r\n                          disabled={isProcessing}\r\n                        >\r\n                          <BookmarkIcon color='primary' />\r\n                        </IconButton>\r\n                      )}\r\n                    </Box>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {/* Transfer Dialog */}\r\n      <Dialog open={open} onClose={handleCloseModal} fullWidth maxWidth=\"sm\">\r\n        <DialogTitle>Nova Transferência de Chave</DialogTitle>\r\n        <DialogContent>\r\n          {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\r\n          <FormControl fullWidth sx={{ mb: 2, mt: 2 }}>\r\n            <InputLabel>Veículo</InputLabel>\r\n            <Select\r\n              value={formData.vehicleId}\r\n              label=\"Veículo\"\r\n              onChange={(e) => {\r\n                setError(null)\r\n                setFormData({ ...formData, vehicleId: e.target.value })\r\n              }}\r\n              disabled={isProcessing}\r\n            >\r\n              {data?.vehicles?.map((v) => {\r\n                if (getCurrentKeyStatusPending(v.id)) return null\r\n                return (\r\n                  <MenuItem key={v.id} value={v.id}>\r\n                    {`${v.plate} - ${v.model}`}\r\n                    {formData.vehicleId === v.id && ` (Atual: ${getCurrentKeyHolder(v.id)})`}\r\n                  </MenuItem>\r\n                )\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl fullWidth sx={{ mb: 2 }}>\r\n            <InputLabel>Novo Responsável</InputLabel>\r\n            <Select\r\n              value={formData.userId}\r\n              label=\"Novo Responsável\"\r\n              onChange={(e) => {\r\n                setError(null)\r\n                setFormData({ ...formData, userId: e.target.value })\r\n              }}\r\n              disabled={isProcessing}\r\n            >\r\n              {data?.users?.map((u) => (\r\n                <MenuItem\r\n                  key={u.id}\r\n                  value={u.id}\r\n                  disabled={groupedVehicleKeys[formData.vehicleId]?.latestKey?.userId === u.id}\r\n                >\r\n                  {u.name}\r\n                  {groupedVehicleKeys[formData.vehicleId]?.latestKey?.userId === u.id && ' (Responsável Atual)'}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseModal} disabled={isProcessing}>Cancelar</Button>\r\n          <Button\r\n            onClick={handleSubmit}\r\n            variant=\"contained\"\r\n            disabled={!formData.userId || !formData.vehicleId || isProcessing}\r\n          >\r\n            {isProcessing ? <CircularProgress size={24} /> : 'Transferir'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Confirmation Dialog */}\r\n      <Dialog open={confirmDialogOpen} onClose={() => !isProcessing && setConfirmDialogOpen(false)}>\r\n        <DialogTitle>Confirmar Transferência</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Deseja transferir a chave do veículo {\r\n              formData.vehicleId && data?.vehicles.find(v => v.id === formData.vehicleId)?.model\r\n            } para {\r\n              formData.userId && data?.users.find(u => u.id === formData.userId)?.name\r\n            }?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setConfirmDialogOpen(false)} disabled={isProcessing}>Cancelar</Button>\r\n          <Button onClick={handleConfirmedSubmit} variant=\"contained\" disabled={isProcessing}>\r\n            {isProcessing ? <CircularProgress size={24} /> : 'Confirmar'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* History Modal */}\r\n      {selectedVehicleKeys && (\r\n        <HistoryModal\r\n          open={historyModalOpen}\r\n          onClose={() => setHistoryModalOpen(false)}\r\n          vehicleKeys={groupedVehicleKeys[selectedVehicleKeys.vehicleId]}\r\n        />\r\n      )}\r\n\r\n      {/* Success Message */}\r\n      <Snackbar open={!!successMessage} autoHideDuration={6000} onClose={() => setSuccessMessage(null)}>\r\n        <Alert onClose={() => setSuccessMessage(null)} severity=\"success\" sx={{ width: '100%' }}>\r\n          {successMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      {/* Loading Backdrop */}\r\n      <Backdrop sx={{ color: '#fff', zIndex: theme.zIndex.drawer + 1 }} open={isProcessing}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </Container>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}