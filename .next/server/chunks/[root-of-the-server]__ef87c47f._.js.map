{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/carlos.dias/Documents/Apps/mui_CHECKLIST/src/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\r\n\r\nconst globalForPrisma = global as unknown as { prisma: PrismaClient };\r\n\r\nexport const prisma = globalForPrisma.prisma || new PrismaClient();\r\nexport default prisma;\r\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma;\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,kBAAkB;AAEjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;uCACjD;AACf,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/carlos.dias/Documents/Apps/mui_CHECKLIST/src/app/api/v2/dashboard/viagens/%5Bid%5D/route.tsx"],"sourcesContent":["import { prisma } from \"@/prisma\"\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\n\r\nasync function getTransaction(id:string) {\r\n  try {\r\n    const result = await prisma.$transaction(async (tx) => {\r\n      const inspections = await tx.inspect.findFirst({\r\n        where: { id },\r\n        include: {\r\n          user: {\r\n            select: {\r\n              name: true,\r\n            },\r\n          },\r\n          start: {\r\n            include: {\r\n              photos: true,\r\n            },\r\n          },\r\n          end: {\r\n            include: {\r\n              photos: true,\r\n            },\r\n          },\r\n          vehicle: true\r\n        },\r\n        orderBy: { createdAt: 'desc' },\r\n      });\r\n      return { inspections };\r\n    });\r\n    \r\n    return result;\r\n  } catch (error) {\r\n    console.error('Transaction failed:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function GET(request: NextRequest, { params }: { params: Promise<{ id: string }> }) {\r\n  \r\n  try {\r\n    const id = (await params).id;\r\n    const data = await getTransaction(id);\r\n    return NextResponse.json(data)\r\n  } catch (error) {\r\n    return NextResponse.json(error)\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,eAAe,eAAe,EAAS;IACrC,IAAI;QACF,MAAM,SAAS,MAAM,+GAAA,CAAA,SAAM,CAAC,YAAY,CAAC,OAAO;YAC9C,MAAM,cAAc,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC;gBAC7C,OAAO;oBAAE;gBAAG;gBACZ,SAAS;oBACP,MAAM;wBACJ,QAAQ;4BACN,MAAM;wBACR;oBACF;oBACA,OAAO;wBACL,SAAS;4BACP,QAAQ;wBACV;oBACF;oBACA,KAAK;wBACH,SAAS;4BACP,QAAQ;wBACV;oBACF;oBACA,SAAS;gBACX;gBACA,SAAS;oBAAE,WAAW;gBAAO;YAC/B;YACA,OAAO;gBAAE;YAAY;QACvB;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,MAAM;IACR;AACF;AAEO,eAAe,IAAI,OAAoB,EAAE,EAAE,MAAM,EAAuC;IAE7F,IAAI;QACF,MAAM,KAAK,CAAC,MAAM,MAAM,EAAE,EAAE;QAC5B,MAAM,OAAO,MAAM,eAAe;QAClC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B;AACF","debugId":null}}]
}